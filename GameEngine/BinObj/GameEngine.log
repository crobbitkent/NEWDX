FXC : warning X4717: Effects deprecated for D3DCompiler_47
  
  compilation object save succeeded; see D:\MINGYU\NEWDX\GameEngine\Bin\Collider.cso
FXC : warning X4717: Effects deprecated for D3DCompiler_47
  
  compilation object save succeeded; see D:\MINGYU\NEWDX\GameEngine\Bin\Standard.cso
FXC : warning X4717: Effects deprecated for D3DCompiler_47
  
  compilation object save succeeded; see D:\MINGYU\NEWDX\GameEngine\Bin\TileMap.cso
FXC : warning X4717: Effects deprecated for D3DCompiler_47
  
  compilation object save succeeded; see D:\MINGYU\NEWDX\GameEngine\Bin\UI.cso
  CameraManager.cpp
d:\mingyu\newdx\gameengine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.17763.0\um\directxmath.h(432): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\cameramanager.h(14): warning C4251: 'CCameraManager::m_CameraList': class 'std::list<CCameraComponent *,std::allocator<_Ty>>'에서는 class 'CCameraManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CCameraComponent *
          ]
  d:\mingyu\newdx\gameengine\include\cameramanager.h(14): note: 'std::list<CCameraComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CCameraComponent *
          ]
d:\mingyu\newdx\gameengine\include\ref.h(13): warning C4251: 'CRef::m_strName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CRef'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\component\scenecomponent.h(15): warning C4251: 'CSceneComponent::m_vecChild': class 'std::vector<CSceneComponent *,std::allocator<_Ty>>'에서는 class 'CSceneComponent'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CSceneComponent *
          ]
  d:\mingyu\newdx\gameengine\include\component\scenecomponent.h(15): note: 'std::vector<CSceneComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CSceneComponent *
          ]
d:\mingyu\newdx\gameengine\include\cameramanager.cpp(42): warning C4244: '인수': 'int'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
d:\mingyu\newdx\gameengine\include\cameramanager.cpp(51): warning C4244: '인수': 'int'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
  CollisionManager.cpp
d:\mingyu\newdx\gameengine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.17763.0\um\directxmath.h(432): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\collisionmanager.h(18): warning C4251: 'CCollisionManager::m_ChannelList': class 'std::list<PCollisionChannel,std::allocator<_Ty>>'에서는 class 'CCollisionManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=PCollisionChannel
          ]
  d:\mingyu\newdx\gameengine\include\collisionmanager.h(18): note: 'std::list<PCollisionChannel,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=PCollisionChannel
          ]
d:\mingyu\newdx\gameengine\include\collisionmanager.h(19): warning C4251: 'CCollisionManager::m_mapProfile': class 'std::unordered_map<size_t,PCollisionProfile,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CCollisionManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=PCollisionProfile
          ]
  d:\mingyu\newdx\gameengine\include\collisionmanager.h(19): note: 'std::unordered_map<size_t,PCollisionProfile,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=PCollisionProfile
          ]
d:\mingyu\newdx\gameengine\include\collisionmanager.h(20): warning C4251: 'CCollisionManager::m_ColliderList': class 'std::list<CColliderBase *,std::allocator<_Ty>>'에서는 class 'CCollisionManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CColliderBase *
          ]
  d:\mingyu\newdx\gameengine\include\collisionmanager.h(20): note: 'std::list<CColliderBase *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CColliderBase *
          ]
d:\mingyu\newdx\gameengine\include\ref.h(13): warning C4251: 'CRef::m_strName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CRef'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\component\scenecomponent.h(15): warning C4251: 'CSceneComponent::m_vecChild': class 'std::vector<CSceneComponent *,std::allocator<_Ty>>'에서는 class 'CSceneComponent'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CSceneComponent *
          ]
  d:\mingyu\newdx\gameengine\include\component\scenecomponent.h(15): note: 'std::vector<CSceneComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CSceneComponent *
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(23): warning C4251: 'CColliderBase::m_vecBlockCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(24): warning C4251: 'CColliderBase::m_vecBeginOverlapCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(25): warning C4251: 'CColliderBase::m_vecEndOverlapCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(28): warning C4251: 'CColliderBase::m_CurrentFrameCollision': class 'std::list<CColliderBase *,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CColliderBase *
          ]
  d:\mingyu\newdx\gameengine\include\collisionmanager.h(20): note: 'std::list<CColliderBase *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CColliderBase *
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(29): warning C4251: 'CColliderBase::m_CollisionList': class 'std::list<CColliderBase *,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CColliderBase *
          ]
  d:\mingyu\newdx\gameengine\include\collisionmanager.h(20): note: 'std::list<CColliderBase *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CColliderBase *
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(30): warning C4251: 'CColliderBase::m_vecSectionIndex': class 'std::vector<unsigned int,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=unsigned int
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(30): note: 'std::vector<unsigned int,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=unsigned int
          ]
d:\mingyu\newdx\gameengine\include\input.h(120): warning C4251: 'CInput::m_tKeyInfo': struct '_tagKeyInfo'에서는 class 'CInput'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  d:\mingyu\newdx\gameengine\include\input.h(28): note: '_tagKeyInfo' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\input.h(122): warning C4251: 'CInput::m_mapAxis': class 'std::unordered_map<size_t,PKeyAxis,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CInput'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=PKeyAxis
          ]
  d:\mingyu\newdx\gameengine\include\input.h(122): note: 'std::unordered_map<size_t,PKeyAxis,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=PKeyAxis
          ]
d:\mingyu\newdx\gameengine\include\input.h(123): warning C4251: 'CInput::m_mapAction': class 'std::unordered_map<size_t,PKeyAction,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CInput'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=PKeyAction
          ]
  d:\mingyu\newdx\gameengine\include\input.h(123): note: 'std::unordered_map<size_t,PKeyAction,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=PKeyAction
          ]
d:\mingyu\newdx\gameengine\include\input.h(124): warning C4251: 'CInput::m_UseKeyList': class 'std::list<unsigned char,std::allocator<_Ty>>'에서는 class 'CInput'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=unsigned char
          ]
  d:\mingyu\newdx\gameengine\include\input.h(124): note: 'std::list<unsigned char,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=unsigned char
          ]
d:\mingyu\newdx\gameengine\include\input.h(137): warning C4251: 'CInput::m_tMouseInfo': struct '_tagKeyInfo'에서는 class 'CInput'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  d:\mingyu\newdx\gameengine\include\input.h(28): note: '_tagKeyInfo' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\collisionmanager.cpp(43): warning C4244: '인수': 'int'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
d:\mingyu\newdx\gameengine\include\collisionmanager.cpp(44): warning C4244: '인수': 'int'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
  Animation2D.cpp
d:\mingyu\newdx\gameengine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.17763.0\um\directxmath.h(432): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\ref.h(13): warning C4251: 'CRef::m_strName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CRef'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\resource\animation2dsequence.h(41): warning C4251: 'CAnimation2DSequence::m_vecTexture': class 'std::vector<CTexture *,std::allocator<_Ty>>'에서는 class 'CAnimation2DSequence'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CTexture *
          ]
  d:\mingyu\newdx\gameengine\include\resource\animation2dsequence.h(41): note: 'std::vector<CTexture *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CTexture *
          ]
d:\mingyu\newdx\gameengine\include\resource\animation2dsequence.h(51): warning C4251: 'CAnimation2DSequence::m_NotifyList': class 'std::list<PAnim2DNotify,std::allocator<_Ty>>'에서는 class 'CAnimation2DSequence'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=PAnim2DNotify
          ]
  d:\mingyu\newdx\gameengine\include\resource\animation2dsequence.h(51): note: 'std::list<PAnim2DNotify,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=PAnim2DNotify
          ]
d:\mingyu\newdx\gameengine\include\resource\animation2dsequence.h(52): warning C4251: 'CAnimation2DSequence::m_vecFrameInfo': class 'std::vector<Animation2DFrameInfo,std::allocator<_Ty>>'에서는 class 'CAnimation2DSequence'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=Animation2DFrameInfo
          ]
  d:\mingyu\newdx\gameengine\include\resource\animation2dsequence.h(52): note: 'std::vector<Animation2DFrameInfo,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=Animation2DFrameInfo
          ]
d:\mingyu\newdx\gameengine\include\resource\animation2dsequence.h(55): warning C4251: 'CAnimation2DSequence::m_strReturnSequence': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CAnimation2DSequence'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\component\animation2d.h(35): warning C4251: 'CAnimation2D::m_mapAnimSequence': class 'std::unordered_map<size_t,CAnimation2DSequence *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CAnimation2D'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CAnimation2DSequence *
          ]
  d:\mingyu\newdx\gameengine\include\component\animation2d.h(35): note: 'std::unordered_map<size_t,CAnimation2DSequence *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CAnimation2DSequence *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(8): warning C4251: 'CResourceManager::m_mapMesh': class 'std::unordered_map<size_t,CMesh *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CMesh *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(8): note: 'std::unordered_map<size_t,CMesh *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CMesh *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(9): warning C4251: 'CResourceManager::m_mapTexture': class 'std::unordered_map<size_t,CTexture *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CTexture *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(9): note: 'std::unordered_map<size_t,CTexture *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CTexture *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(10): warning C4251: 'CResourceManager::m_mapMaterial': class 'std::unordered_map<size_t,CMaterial *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CMaterial *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(10): note: 'std::unordered_map<size_t,CMaterial *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CMaterial *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(11): warning C4251: 'CResourceManager::m_mapSampler': class 'std::unordered_map<size_t,ID3D11SamplerState *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=ID3D11SamplerState *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(11): note: 'std::unordered_map<size_t,ID3D11SamplerState *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=ID3D11SamplerState *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(12): warning C4251: 'CResourceManager::m_mapRenderState': class 'std::unordered_map<size_t,CRenderState *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CRenderState *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(12): note: 'std::unordered_map<size_t,CRenderState *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CRenderState *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(13): warning C4251: 'CResourceManager::m_mapAnim2DSequence': class 'std::unordered_map<size_t,CAnimation2DSequence *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CAnimation2DSequence *
          ]
  d:\mingyu\newdx\gameengine\include\component\animation2d.h(35): note: 'std::unordered_map<size_t,CAnimation2DSequence *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CAnimation2DSequence *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): warning C4251: 'CResourceManager::m_DefaultMeshList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(15): warning C4251: 'CResourceManager::m_DefaultTextureList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(16): warning C4251: 'CResourceManager::m_DefaultRenderStateList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(17): warning C4251: 'CResourceManager::m_DefaultMaterialList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(18): warning C4251: 'CResourceManager::m_MaterialIter': class 'std::_List_iterator<std::_List_val<std::_List_simple_types<_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::pair<const size_t,CMaterial *>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\list(457): note: 'std::_List_iterator<std::_List_val<std::_List_simple_types<_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::pair<const size_t,CMaterial *>
          ]
d:\mingyu\newdx\gameengine\include\resource\material.h(43): warning C4251: 'CMaterial::m_vecContainer': class 'std::vector<PMaterialContainer,std::allocator<_Ty>>'에서는 class 'CMaterial'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=PMaterialContainer
          ]
  d:\mingyu\newdx\gameengine\include\resource\material.h(43): note: 'std::vector<PMaterialContainer,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=PMaterialContainer
          ]
d:\mingyu\newdx\gameengine\include\resource\material.h(47): warning C4251: 'CMaterial::m_mapCBuffer': class 'std::unordered_map<size_t,PCBufferNode,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CMaterial'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=PCBufferNode
          ]
  d:\mingyu\newdx\gameengine\include\resource\material.h(47): note: 'std::unordered_map<size_t,PCBufferNode,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=PCBufferNode
          ]
d:\mingyu\newdx\gameengine\include\component\scenecomponent.h(15): warning C4251: 'CSceneComponent::m_vecChild': class 'std::vector<CSceneComponent *,std::allocator<_Ty>>'에서는 class 'CSceneComponent'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CSceneComponent *
          ]
  d:\mingyu\newdx\gameengine\include\component\scenecomponent.h(15): note: 'std::vector<CSceneComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CSceneComponent *
          ]
d:\mingyu\newdx\gameengine\include\resource\texture.h(14): warning C4251: 'CTexture::m_vecImage': class 'std::vector<DirectX::ScratchImage *,std::allocator<_Ty>>'에서는 class 'CTexture'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=DirectX::ScratchImage *
          ]
  d:\mingyu\newdx\gameengine\include\resource\texture.h(14): note: 'std::vector<DirectX::ScratchImage *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=DirectX::ScratchImage *
          ]
d:\mingyu\newdx\gameengine\include\resource\texture.h(15): warning C4251: 'CTexture::m_vecFileName': class 'std::vector<const TCHAR *,std::allocator<_Ty>>'에서는 class 'CTexture'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=const TCHAR *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(40): note: 'std::vector<const TCHAR *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=const TCHAR *
          ]
d:\mingyu\newdx\gameengine\include\resource\texture.h(16): warning C4251: 'CTexture::m_strPathName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CTexture'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
  AnimationMeshComponent.cpp
d:\mingyu\newdx\gameengine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.17763.0\um\directxmath.h(432): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\ref.h(13): warning C4251: 'CRef::m_strName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CRef'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\component\scenecomponent.h(15): warning C4251: 'CSceneComponent::m_vecChild': class 'std::vector<CSceneComponent *,std::allocator<_Ty>>'에서는 class 'CSceneComponent'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CSceneComponent *
          ]
  d:\mingyu\newdx\gameengine\include\component\scenecomponent.h(15): note: 'std::vector<CSceneComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CSceneComponent *
          ]
d:\mingyu\newdx\gameengine\include\resource\mesh.h(22): warning C4251: 'CMesh::m_vecMeshContainer': class 'std::vector<PMeshContainer,std::allocator<_Ty>>'에서는 class 'CMesh'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=PMeshContainer
          ]
  d:\mingyu\newdx\gameengine\include\resource\mesh.h(22): note: 'std::vector<PMeshContainer,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=PMeshContainer
          ]
d:\mingyu\newdx\gameengine\include\resource\material.h(43): warning C4251: 'CMaterial::m_vecContainer': class 'std::vector<PMaterialContainer,std::allocator<_Ty>>'에서는 class 'CMaterial'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=PMaterialContainer
          ]
  d:\mingyu\newdx\gameengine\include\resource\material.h(43): note: 'std::vector<PMaterialContainer,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=PMaterialContainer
          ]
d:\mingyu\newdx\gameengine\include\resource\material.h(47): warning C4251: 'CMaterial::m_mapCBuffer': class 'std::unordered_map<size_t,PCBufferNode,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CMaterial'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=PCBufferNode
          ]
  d:\mingyu\newdx\gameengine\include\resource\material.h(47): note: 'std::unordered_map<size_t,PCBufferNode,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=PCBufferNode
          ]
d:\mingyu\newdx\gameengine\include\component\transform.h(16): warning C4251: 'CTransform::m_vecChild': class 'std::vector<CTransform *,std::allocator<_Ty>>'에서는 class 'CTransform'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CTransform *
          ]
  d:\mingyu\newdx\gameengine\include\component\transform.h(16): note: 'std::vector<CTransform *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CTransform *
          ]
  CameraComponent.cpp
d:\mingyu\newdx\gameengine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.17763.0\um\directxmath.h(432): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\ref.h(13): warning C4251: 'CRef::m_strName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CRef'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\component\scenecomponent.h(15): warning C4251: 'CSceneComponent::m_vecChild': class 'std::vector<CSceneComponent *,std::allocator<_Ty>>'에서는 class 'CSceneComponent'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CSceneComponent *
          ]
  d:\mingyu\newdx\gameengine\include\component\scenecomponent.h(15): note: 'std::vector<CSceneComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CSceneComponent *
          ]
d:\mingyu\newdx\gameengine\include\component\transform.h(16): warning C4251: 'CTransform::m_vecChild': class 'std::vector<CTransform *,std::allocator<_Ty>>'에서는 class 'CTransform'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CTransform *
          ]
  d:\mingyu\newdx\gameengine\include\component\transform.h(16): note: 'std::vector<CTransform *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CTransform *
          ]
d:\mingyu\newdx\gameengine\include\component\cameracomponent.cpp(54): warning C4244: '인수': 'int'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
  CharacterMovementComponent.cpp
d:\mingyu\newdx\gameengine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.17763.0\um\directxmath.h(432): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\ref.h(13): warning C4251: 'CRef::m_strName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CRef'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
  ColliderBase.cpp
d:\mingyu\newdx\gameengine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.17763.0\um\directxmath.h(432): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\ref.h(13): warning C4251: 'CRef::m_strName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CRef'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\component\scenecomponent.h(15): warning C4251: 'CSceneComponent::m_vecChild': class 'std::vector<CSceneComponent *,std::allocator<_Ty>>'에서는 class 'CSceneComponent'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CSceneComponent *
          ]
  d:\mingyu\newdx\gameengine\include\component\scenecomponent.h(15): note: 'std::vector<CSceneComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CSceneComponent *
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(23): warning C4251: 'CColliderBase::m_vecBlockCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(24): warning C4251: 'CColliderBase::m_vecBeginOverlapCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(25): warning C4251: 'CColliderBase::m_vecEndOverlapCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(28): warning C4251: 'CColliderBase::m_CurrentFrameCollision': class 'std::list<CColliderBase *,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CColliderBase *
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(28): note: 'std::list<CColliderBase *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CColliderBase *
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(29): warning C4251: 'CColliderBase::m_CollisionList': class 'std::list<CColliderBase *,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CColliderBase *
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(28): note: 'std::list<CColliderBase *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CColliderBase *
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(30): warning C4251: 'CColliderBase::m_vecSectionIndex': class 'std::vector<unsigned int,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=unsigned int
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(30): note: 'std::vector<unsigned int,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=unsigned int
          ]
d:\mingyu\newdx\gameengine\include\collisionmanager.h(18): warning C4251: 'CCollisionManager::m_ChannelList': class 'std::list<PCollisionChannel,std::allocator<_Ty>>'에서는 class 'CCollisionManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=PCollisionChannel
          ]
  d:\mingyu\newdx\gameengine\include\collisionmanager.h(18): note: 'std::list<PCollisionChannel,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=PCollisionChannel
          ]
d:\mingyu\newdx\gameengine\include\collisionmanager.h(19): warning C4251: 'CCollisionManager::m_mapProfile': class 'std::unordered_map<size_t,PCollisionProfile,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CCollisionManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=PCollisionProfile
          ]
  d:\mingyu\newdx\gameengine\include\collisionmanager.h(19): note: 'std::unordered_map<size_t,PCollisionProfile,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=PCollisionProfile
          ]
d:\mingyu\newdx\gameengine\include\collisionmanager.h(20): warning C4251: 'CCollisionManager::m_ColliderList': class 'std::list<CColliderBase *,std::allocator<_Ty>>'에서는 class 'CCollisionManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CColliderBase *
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(28): note: 'std::list<CColliderBase *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CColliderBase *
          ]
d:\mingyu\newdx\gameengine\include\resource\mesh.h(22): warning C4251: 'CMesh::m_vecMeshContainer': class 'std::vector<PMeshContainer,std::allocator<_Ty>>'에서는 class 'CMesh'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=PMeshContainer
          ]
  d:\mingyu\newdx\gameengine\include\resource\mesh.h(22): note: 'std::vector<PMeshContainer,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=PMeshContainer
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(8): warning C4251: 'CResourceManager::m_mapMesh': class 'std::unordered_map<size_t,CMesh *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CMesh *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(8): note: 'std::unordered_map<size_t,CMesh *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CMesh *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(9): warning C4251: 'CResourceManager::m_mapTexture': class 'std::unordered_map<size_t,CTexture *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CTexture *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(9): note: 'std::unordered_map<size_t,CTexture *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CTexture *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(10): warning C4251: 'CResourceManager::m_mapMaterial': class 'std::unordered_map<size_t,CMaterial *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CMaterial *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(10): note: 'std::unordered_map<size_t,CMaterial *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CMaterial *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(11): warning C4251: 'CResourceManager::m_mapSampler': class 'std::unordered_map<size_t,ID3D11SamplerState *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=ID3D11SamplerState *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(11): note: 'std::unordered_map<size_t,ID3D11SamplerState *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=ID3D11SamplerState *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(12): warning C4251: 'CResourceManager::m_mapRenderState': class 'std::unordered_map<size_t,CRenderState *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CRenderState *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(12): note: 'std::unordered_map<size_t,CRenderState *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CRenderState *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(13): warning C4251: 'CResourceManager::m_mapAnim2DSequence': class 'std::unordered_map<size_t,CAnimation2DSequence *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CAnimation2DSequence *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(13): note: 'std::unordered_map<size_t,CAnimation2DSequence *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CAnimation2DSequence *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): warning C4251: 'CResourceManager::m_DefaultMeshList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(15): warning C4251: 'CResourceManager::m_DefaultTextureList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(16): warning C4251: 'CResourceManager::m_DefaultRenderStateList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(17): warning C4251: 'CResourceManager::m_DefaultMaterialList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(18): warning C4251: 'CResourceManager::m_MaterialIter': class 'std::_List_iterator<std::_List_val<std::_List_simple_types<_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::pair<const size_t,CMaterial *>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\list(457): note: 'std::_List_iterator<std::_List_val<std::_List_simple_types<_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::pair<const size_t,CMaterial *>
          ]
d:\mingyu\newdx\gameengine\include\resource\material.h(43): warning C4251: 'CMaterial::m_vecContainer': class 'std::vector<PMaterialContainer,std::allocator<_Ty>>'에서는 class 'CMaterial'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=PMaterialContainer
          ]
  d:\mingyu\newdx\gameengine\include\resource\material.h(43): note: 'std::vector<PMaterialContainer,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=PMaterialContainer
          ]
d:\mingyu\newdx\gameengine\include\resource\material.h(47): warning C4251: 'CMaterial::m_mapCBuffer': class 'std::unordered_map<size_t,PCBufferNode,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CMaterial'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=PCBufferNode
          ]
  d:\mingyu\newdx\gameengine\include\resource\material.h(47): note: 'std::unordered_map<size_t,PCBufferNode,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=PCBufferNode
          ]
d:\mingyu\newdx\gameengine\include\component\transform.h(16): warning C4251: 'CTransform::m_vecChild': class 'std::vector<CTransform *,std::allocator<_Ty>>'에서는 class 'CTransform'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CTransform *
          ]
  d:\mingyu\newdx\gameengine\include\component\transform.h(16): note: 'std::vector<CTransform *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CTransform *
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.cpp(367): warning C4267: '인수': 'size_t'에서 'int'(으)로 변환하면서 데이터가 손실될 수 있습니다.
d:\mingyu\newdx\gameengine\include\component\colliderbase.cpp(374): warning C4267: '인수': 'size_t'에서 'int'(으)로 변환하면서 데이터가 손실될 수 있습니다.
d:\mingyu\newdx\gameengine\include\component\colliderbase.cpp(399): warning C4267: '인수': 'size_t'에서 'int'(으)로 변환하면서 데이터가 손실될 수 있습니다.
d:\mingyu\newdx\gameengine\include\component\colliderbase.cpp(406): warning C4267: '인수': 'size_t'에서 'int'(으)로 변환하면서 데이터가 손실될 수 있습니다.
  ColliderOBB2D.cpp
d:\mingyu\newdx\gameengine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.17763.0\um\directxmath.h(432): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\ref.h(13): warning C4251: 'CRef::m_strName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CRef'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\component\scenecomponent.h(15): warning C4251: 'CSceneComponent::m_vecChild': class 'std::vector<CSceneComponent *,std::allocator<_Ty>>'에서는 class 'CSceneComponent'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CSceneComponent *
          ]
  d:\mingyu\newdx\gameengine\include\component\scenecomponent.h(15): note: 'std::vector<CSceneComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CSceneComponent *
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(23): warning C4251: 'CColliderBase::m_vecBlockCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(24): warning C4251: 'CColliderBase::m_vecBeginOverlapCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(25): warning C4251: 'CColliderBase::m_vecEndOverlapCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(28): warning C4251: 'CColliderBase::m_CurrentFrameCollision': class 'std::list<CColliderBase *,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CColliderBase *
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(28): note: 'std::list<CColliderBase *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CColliderBase *
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(29): warning C4251: 'CColliderBase::m_CollisionList': class 'std::list<CColliderBase *,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CColliderBase *
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(28): note: 'std::list<CColliderBase *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CColliderBase *
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(30): warning C4251: 'CColliderBase::m_vecSectionIndex': class 'std::vector<unsigned int,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=unsigned int
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(30): note: 'std::vector<unsigned int,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=unsigned int
          ]
d:\mingyu\newdx\gameengine\include\component\transform.h(16): warning C4251: 'CTransform::m_vecChild': class 'std::vector<CTransform *,std::allocator<_Ty>>'에서는 class 'CTransform'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CTransform *
          ]
  d:\mingyu\newdx\gameengine\include\component\transform.h(16): note: 'std::vector<CTransform *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CTransform *
          ]
  ColliderPixel.cpp
d:\mingyu\newdx\gameengine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.17763.0\um\directxmath.h(432): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\ref.h(13): warning C4251: 'CRef::m_strName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CRef'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\component\scenecomponent.h(15): warning C4251: 'CSceneComponent::m_vecChild': class 'std::vector<CSceneComponent *,std::allocator<_Ty>>'에서는 class 'CSceneComponent'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CSceneComponent *
          ]
  d:\mingyu\newdx\gameengine\include\component\scenecomponent.h(15): note: 'std::vector<CSceneComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CSceneComponent *
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(23): warning C4251: 'CColliderBase::m_vecBlockCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(24): warning C4251: 'CColliderBase::m_vecBeginOverlapCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(25): warning C4251: 'CColliderBase::m_vecEndOverlapCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(28): warning C4251: 'CColliderBase::m_CurrentFrameCollision': class 'std::list<CColliderBase *,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CColliderBase *
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(28): note: 'std::list<CColliderBase *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CColliderBase *
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(29): warning C4251: 'CColliderBase::m_CollisionList': class 'std::list<CColliderBase *,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CColliderBase *
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(28): note: 'std::list<CColliderBase *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CColliderBase *
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(30): warning C4251: 'CColliderBase::m_vecSectionIndex': class 'std::vector<unsigned int,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=unsigned int
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(30): note: 'std::vector<unsigned int,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=unsigned int
          ]
d:\mingyu\newdx\gameengine\include\component\transform.h(16): warning C4251: 'CTransform::m_vecChild': class 'std::vector<CTransform *,std::allocator<_Ty>>'에서는 class 'CTransform'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CTransform *
          ]
  d:\mingyu\newdx\gameengine\include\component\transform.h(16): note: 'std::vector<CTransform *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CTransform *
          ]
d:\mingyu\newdx\gameengine\include\pathmanager.h(10): warning C4251: 'CPathManager::m_mapPath': class 'std::unordered_map<size_t,TCHAR *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CPathManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=TCHAR *
          ]
  d:\mingyu\newdx\gameengine\include\pathmanager.h(10): note: 'std::unordered_map<size_t,TCHAR *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=TCHAR *
          ]
d:\mingyu\newdx\gameengine\include\component\colliderpixel.cpp(119): warning C4267: '=': 'size_t'에서 'int'(으)로 변환하면서 데이터가 손실될 수 있습니다.
d:\mingyu\newdx\gameengine\include\component\colliderpixel.cpp(120): warning C4267: '=': 'size_t'에서 'int'(으)로 변환하면서 데이터가 손실될 수 있습니다.
d:\mingyu\newdx\gameengine\include\component\colliderpixel.cpp(121): warning C4267: '=': 'size_t'에서 'int'(으)로 변환하면서 데이터가 손실될 수 있습니다.
d:\mingyu\newdx\gameengine\include\component\colliderpixel.cpp(167): warning C4244: '인수': 'int'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
d:\mingyu\newdx\gameengine\include\component\colliderpixel.cpp(168): warning C4244: '인수': 'int'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
d:\mingyu\newdx\gameengine\include\component\colliderpixel.cpp(169): warning C4244: '인수': 'int'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
  ColliderPoint.cpp
d:\mingyu\newdx\gameengine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.17763.0\um\directxmath.h(432): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\ref.h(13): warning C4251: 'CRef::m_strName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CRef'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\component\scenecomponent.h(15): warning C4251: 'CSceneComponent::m_vecChild': class 'std::vector<CSceneComponent *,std::allocator<_Ty>>'에서는 class 'CSceneComponent'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CSceneComponent *
          ]
  d:\mingyu\newdx\gameengine\include\component\scenecomponent.h(15): note: 'std::vector<CSceneComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CSceneComponent *
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(23): warning C4251: 'CColliderBase::m_vecBlockCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(24): warning C4251: 'CColliderBase::m_vecBeginOverlapCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(25): warning C4251: 'CColliderBase::m_vecEndOverlapCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(28): warning C4251: 'CColliderBase::m_CurrentFrameCollision': class 'std::list<CColliderBase *,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CColliderBase *
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(28): note: 'std::list<CColliderBase *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CColliderBase *
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(29): warning C4251: 'CColliderBase::m_CollisionList': class 'std::list<CColliderBase *,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CColliderBase *
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(28): note: 'std::list<CColliderBase *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CColliderBase *
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(30): warning C4251: 'CColliderBase::m_vecSectionIndex': class 'std::vector<unsigned int,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=unsigned int
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(30): note: 'std::vector<unsigned int,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=unsigned int
          ]
d:\mingyu\newdx\gameengine\include\component\transform.h(16): warning C4251: 'CTransform::m_vecChild': class 'std::vector<CTransform *,std::allocator<_Ty>>'에서는 class 'CTransform'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CTransform *
          ]
  d:\mingyu\newdx\gameengine\include\component\transform.h(16): note: 'std::vector<CTransform *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CTransform *
          ]
  ColliderRect.cpp
d:\mingyu\newdx\gameengine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.17763.0\um\directxmath.h(432): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\ref.h(13): warning C4251: 'CRef::m_strName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CRef'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\component\scenecomponent.h(15): warning C4251: 'CSceneComponent::m_vecChild': class 'std::vector<CSceneComponent *,std::allocator<_Ty>>'에서는 class 'CSceneComponent'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CSceneComponent *
          ]
  d:\mingyu\newdx\gameengine\include\component\scenecomponent.h(15): note: 'std::vector<CSceneComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CSceneComponent *
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(23): warning C4251: 'CColliderBase::m_vecBlockCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(24): warning C4251: 'CColliderBase::m_vecBeginOverlapCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(25): warning C4251: 'CColliderBase::m_vecEndOverlapCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(28): warning C4251: 'CColliderBase::m_CurrentFrameCollision': class 'std::list<CColliderBase *,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CColliderBase *
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(28): note: 'std::list<CColliderBase *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CColliderBase *
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(29): warning C4251: 'CColliderBase::m_CollisionList': class 'std::list<CColliderBase *,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CColliderBase *
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(28): note: 'std::list<CColliderBase *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CColliderBase *
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(30): warning C4251: 'CColliderBase::m_vecSectionIndex': class 'std::vector<unsigned int,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=unsigned int
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(30): note: 'std::vector<unsigned int,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=unsigned int
          ]
d:\mingyu\newdx\gameengine\include\component\transform.h(16): warning C4251: 'CTransform::m_vecChild': class 'std::vector<CTransform *,std::allocator<_Ty>>'에서는 class 'CTransform'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CTransform *
          ]
  d:\mingyu\newdx\gameengine\include\component\transform.h(16): note: 'std::vector<CTransform *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CTransform *
          ]
  ColliderSphere2D.cpp
d:\mingyu\newdx\gameengine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.17763.0\um\directxmath.h(432): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\ref.h(13): warning C4251: 'CRef::m_strName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CRef'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\component\scenecomponent.h(15): warning C4251: 'CSceneComponent::m_vecChild': class 'std::vector<CSceneComponent *,std::allocator<_Ty>>'에서는 class 'CSceneComponent'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CSceneComponent *
          ]
  d:\mingyu\newdx\gameengine\include\component\scenecomponent.h(15): note: 'std::vector<CSceneComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CSceneComponent *
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(23): warning C4251: 'CColliderBase::m_vecBlockCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(24): warning C4251: 'CColliderBase::m_vecBeginOverlapCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(25): warning C4251: 'CColliderBase::m_vecEndOverlapCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(28): warning C4251: 'CColliderBase::m_CurrentFrameCollision': class 'std::list<CColliderBase *,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CColliderBase *
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(28): note: 'std::list<CColliderBase *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CColliderBase *
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(29): warning C4251: 'CColliderBase::m_CollisionList': class 'std::list<CColliderBase *,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CColliderBase *
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(28): note: 'std::list<CColliderBase *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CColliderBase *
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(30): warning C4251: 'CColliderBase::m_vecSectionIndex': class 'std::vector<unsigned int,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=unsigned int
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(30): note: 'std::vector<unsigned int,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=unsigned int
          ]
d:\mingyu\newdx\gameengine\include\component\transform.h(16): warning C4251: 'CTransform::m_vecChild': class 'std::vector<CTransform *,std::allocator<_Ty>>'에서는 class 'CTransform'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CTransform *
          ]
  d:\mingyu\newdx\gameengine\include\component\transform.h(16): note: 'std::vector<CTransform *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CTransform *
          ]
  Collision.cpp
d:\mingyu\newdx\gameengine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.17763.0\um\directxmath.h(432): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\ref.h(13): warning C4251: 'CRef::m_strName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CRef'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\component\scenecomponent.h(15): warning C4251: 'CSceneComponent::m_vecChild': class 'std::vector<CSceneComponent *,std::allocator<_Ty>>'에서는 class 'CSceneComponent'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CSceneComponent *
          ]
  d:\mingyu\newdx\gameengine\include\component\scenecomponent.h(15): note: 'std::vector<CSceneComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CSceneComponent *
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(23): warning C4251: 'CColliderBase::m_vecBlockCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(24): warning C4251: 'CColliderBase::m_vecBeginOverlapCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(25): warning C4251: 'CColliderBase::m_vecEndOverlapCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(28): warning C4251: 'CColliderBase::m_CurrentFrameCollision': class 'std::list<CColliderBase *,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CColliderBase *
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(28): note: 'std::list<CColliderBase *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CColliderBase *
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(29): warning C4251: 'CColliderBase::m_CollisionList': class 'std::list<CColliderBase *,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CColliderBase *
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(28): note: 'std::list<CColliderBase *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CColliderBase *
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(30): warning C4251: 'CColliderBase::m_vecSectionIndex': class 'std::vector<unsigned int,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=unsigned int
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(30): note: 'std::vector<unsigned int,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=unsigned int
          ]
d:\mingyu\newdx\gameengine\include\component\collision.cpp(346): warning C4244: '초기화 중': 'float'에서 'int'(으)로 변환하면서 데이터가 손실될 수 있습니다.
d:\mingyu\newdx\gameengine\include\component\collision.cpp(348): warning C4244: '초기화 중': 'float'에서 'int'(으)로 변환하면서 데이터가 손실될 수 있습니다.
d:\mingyu\newdx\gameengine\include\component\collision.cpp(353): warning C4244: '초기화 중': 'float'에서 'int'(으)로 변환하면서 데이터가 손실될 수 있습니다.
d:\mingyu\newdx\gameengine\include\component\collision.cpp(355): warning C4244: '초기화 중': 'float'에서 'int'(으)로 변환하면서 데이터가 손실될 수 있습니다.
d:\mingyu\newdx\gameengine\include\component\collision.cpp(366): warning C4244: '=': 'int'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
d:\mingyu\newdx\gameengine\include\component\collision.cpp(367): warning C4244: '=': 'int'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
  Component.cpp
d:\mingyu\newdx\gameengine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.17763.0\um\directxmath.h(432): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\ref.h(13): warning C4251: 'CRef::m_strName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CRef'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
  MovementComponent.cpp
d:\mingyu\newdx\gameengine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.17763.0\um\directxmath.h(432): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\ref.h(13): warning C4251: 'CRef::m_strName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CRef'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\component\scenecomponent.h(15): warning C4251: 'CSceneComponent::m_vecChild': class 'std::vector<CSceneComponent *,std::allocator<_Ty>>'에서는 class 'CSceneComponent'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CSceneComponent *
          ]
  d:\mingyu\newdx\gameengine\include\component\scenecomponent.h(15): note: 'std::vector<CSceneComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CSceneComponent *
          ]
  ObjectComponent.cpp
d:\mingyu\newdx\gameengine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.17763.0\um\directxmath.h(432): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\ref.h(13): warning C4251: 'CRef::m_strName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CRef'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
  ProjectileMovementComponent.cpp
d:\mingyu\newdx\gameengine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.17763.0\um\directxmath.h(432): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\ref.h(13): warning C4251: 'CRef::m_strName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CRef'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\component\scenecomponent.h(15): warning C4251: 'CSceneComponent::m_vecChild': class 'std::vector<CSceneComponent *,std::allocator<_Ty>>'에서는 class 'CSceneComponent'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CSceneComponent *
          ]
  d:\mingyu\newdx\gameengine\include\component\scenecomponent.h(15): note: 'std::vector<CSceneComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CSceneComponent *
          ]
d:\mingyu\newdx\gameengine\include\object\gameobject.h(19): warning C4251: 'CGameObject::m_vecObjComponent': class 'std::vector<CObjectComponent *,std::allocator<_Ty>>'에서는 class 'CGameObject'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CObjectComponent *
          ]
  d:\mingyu\newdx\gameengine\include\object\gameobject.h(19): note: 'std::vector<CObjectComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CObjectComponent *
          ]
d:\mingyu\newdx\gameengine\include\object\gameobject.h(20): warning C4251: 'CGameObject::m_vecChild': class 'std::vector<CGameObject *,std::allocator<_Ty>>'에서는 class 'CGameObject'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CGameObject *
          ]
  d:\mingyu\newdx\gameengine\include\object\gameobject.h(20): note: 'std::vector<CGameObject *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CGameObject *
          ]
d:\mingyu\newdx\gameengine\include\object\gameobject.h(22): warning C4251: 'CGameObject::m_BeginList': class 'std::list<CComponent *,std::allocator<_Ty>>'에서는 class 'CGameObject'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CComponent *
          ]
  d:\mingyu\newdx\gameengine\include\object\gameobject.h(22): note: 'std::list<CComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CComponent *
          ]
  SceneComponent.cpp
d:\mingyu\newdx\gameengine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.17763.0\um\directxmath.h(432): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\ref.h(13): warning C4251: 'CRef::m_strName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CRef'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\component\scenecomponent.h(15): warning C4251: 'CSceneComponent::m_vecChild': class 'std::vector<CSceneComponent *,std::allocator<_Ty>>'에서는 class 'CSceneComponent'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CSceneComponent *
          ]
  d:\mingyu\newdx\gameengine\include\component\scenecomponent.h(15): note: 'std::vector<CSceneComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CSceneComponent *
          ]
d:\mingyu\newdx\gameengine\include\object\gameobject.h(19): warning C4251: 'CGameObject::m_vecObjComponent': class 'std::vector<CObjectComponent *,std::allocator<_Ty>>'에서는 class 'CGameObject'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CObjectComponent *
          ]
  d:\mingyu\newdx\gameengine\include\object\gameobject.h(19): note: 'std::vector<CObjectComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CObjectComponent *
          ]
d:\mingyu\newdx\gameengine\include\object\gameobject.h(20): warning C4251: 'CGameObject::m_vecChild': class 'std::vector<CGameObject *,std::allocator<_Ty>>'에서는 class 'CGameObject'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CGameObject *
          ]
  d:\mingyu\newdx\gameengine\include\object\gameobject.h(20): note: 'std::vector<CGameObject *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CGameObject *
          ]
d:\mingyu\newdx\gameengine\include\object\gameobject.h(22): warning C4251: 'CGameObject::m_BeginList': class 'std::list<CComponent *,std::allocator<_Ty>>'에서는 class 'CGameObject'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CComponent *
          ]
  d:\mingyu\newdx\gameengine\include\object\gameobject.h(22): note: 'std::list<CComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CComponent *
          ]
d:\mingyu\newdx\gameengine\include\component\transform.h(16): warning C4251: 'CTransform::m_vecChild': class 'std::vector<CTransform *,std::allocator<_Ty>>'에서는 class 'CTransform'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CTransform *
          ]
  d:\mingyu\newdx\gameengine\include\component\transform.h(16): note: 'std::vector<CTransform *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CTransform *
          ]
  StaticMeshComponent.cpp
d:\mingyu\newdx\gameengine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.17763.0\um\directxmath.h(432): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\ref.h(13): warning C4251: 'CRef::m_strName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CRef'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\component\scenecomponent.h(15): warning C4251: 'CSceneComponent::m_vecChild': class 'std::vector<CSceneComponent *,std::allocator<_Ty>>'에서는 class 'CSceneComponent'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CSceneComponent *
          ]
  d:\mingyu\newdx\gameengine\include\component\scenecomponent.h(15): note: 'std::vector<CSceneComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CSceneComponent *
          ]
d:\mingyu\newdx\gameengine\include\resource\mesh.h(22): warning C4251: 'CMesh::m_vecMeshContainer': class 'std::vector<PMeshContainer,std::allocator<_Ty>>'에서는 class 'CMesh'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=PMeshContainer
          ]
  d:\mingyu\newdx\gameengine\include\resource\mesh.h(22): note: 'std::vector<PMeshContainer,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=PMeshContainer
          ]
d:\mingyu\newdx\gameengine\include\resource\material.h(43): warning C4251: 'CMaterial::m_vecContainer': class 'std::vector<PMaterialContainer,std::allocator<_Ty>>'에서는 class 'CMaterial'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=PMaterialContainer
          ]
  d:\mingyu\newdx\gameengine\include\resource\material.h(43): note: 'std::vector<PMaterialContainer,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=PMaterialContainer
          ]
d:\mingyu\newdx\gameengine\include\resource\material.h(47): warning C4251: 'CMaterial::m_mapCBuffer': class 'std::unordered_map<size_t,PCBufferNode,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CMaterial'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=PCBufferNode
          ]
  d:\mingyu\newdx\gameengine\include\resource\material.h(47): note: 'std::unordered_map<size_t,PCBufferNode,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=PCBufferNode
          ]
d:\mingyu\newdx\gameengine\include\component\transform.h(16): warning C4251: 'CTransform::m_vecChild': class 'std::vector<CTransform *,std::allocator<_Ty>>'에서는 class 'CTransform'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CTransform *
          ]
  d:\mingyu\newdx\gameengine\include\component\transform.h(16): note: 'std::vector<CTransform *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CTransform *
          ]
d:\mingyu\newdx\gameengine\include\resource\animation2dsequence.h(41): warning C4251: 'CAnimation2DSequence::m_vecTexture': class 'std::vector<CTexture *,std::allocator<_Ty>>'에서는 class 'CAnimation2DSequence'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CTexture *
          ]
  d:\mingyu\newdx\gameengine\include\resource\animation2dsequence.h(41): note: 'std::vector<CTexture *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CTexture *
          ]
d:\mingyu\newdx\gameengine\include\resource\animation2dsequence.h(51): warning C4251: 'CAnimation2DSequence::m_NotifyList': class 'std::list<PAnim2DNotify,std::allocator<_Ty>>'에서는 class 'CAnimation2DSequence'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=PAnim2DNotify
          ]
  d:\mingyu\newdx\gameengine\include\resource\animation2dsequence.h(51): note: 'std::list<PAnim2DNotify,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=PAnim2DNotify
          ]
d:\mingyu\newdx\gameengine\include\resource\animation2dsequence.h(52): warning C4251: 'CAnimation2DSequence::m_vecFrameInfo': class 'std::vector<Animation2DFrameInfo,std::allocator<_Ty>>'에서는 class 'CAnimation2DSequence'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=Animation2DFrameInfo
          ]
  d:\mingyu\newdx\gameengine\include\resource\animation2dsequence.h(52): note: 'std::vector<Animation2DFrameInfo,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=Animation2DFrameInfo
          ]
d:\mingyu\newdx\gameengine\include\resource\animation2dsequence.h(55): warning C4251: 'CAnimation2DSequence::m_strReturnSequence': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CAnimation2DSequence'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\component\animation2d.h(35): warning C4251: 'CAnimation2D::m_mapAnimSequence': class 'std::unordered_map<size_t,CAnimation2DSequence *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CAnimation2D'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CAnimation2DSequence *
          ]
  d:\mingyu\newdx\gameengine\include\component\animation2d.h(35): note: 'std::unordered_map<size_t,CAnimation2DSequence *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CAnimation2DSequence *
          ]
d:\mingyu\newdx\gameengine\include\component\staticmeshcomponent.cpp(167): warning C4267: '인수': 'size_t'에서 'int'(으)로 변환하면서 데이터가 손실될 수 있습니다.
d:\mingyu\newdx\gameengine\include\component\staticmeshcomponent.cpp(193): warning C4267: '인수': 'size_t'에서 'int'(으)로 변환하면서 데이터가 손실될 수 있습니다.
  Tile.cpp
d:\mingyu\newdx\gameengine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.17763.0\um\directxmath.h(432): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\ref.h(13): warning C4251: 'CRef::m_strName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CRef'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\resource\mesh.h(22): warning C4251: 'CMesh::m_vecMeshContainer': class 'std::vector<PMeshContainer,std::allocator<_Ty>>'에서는 class 'CMesh'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=PMeshContainer
          ]
  d:\mingyu\newdx\gameengine\include\resource\mesh.h(22): note: 'std::vector<PMeshContainer,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=PMeshContainer
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(8): warning C4251: 'CResourceManager::m_mapMesh': class 'std::unordered_map<size_t,CMesh *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CMesh *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(8): note: 'std::unordered_map<size_t,CMesh *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CMesh *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(9): warning C4251: 'CResourceManager::m_mapTexture': class 'std::unordered_map<size_t,CTexture *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CTexture *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(9): note: 'std::unordered_map<size_t,CTexture *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CTexture *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(10): warning C4251: 'CResourceManager::m_mapMaterial': class 'std::unordered_map<size_t,CMaterial *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CMaterial *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(10): note: 'std::unordered_map<size_t,CMaterial *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CMaterial *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(11): warning C4251: 'CResourceManager::m_mapSampler': class 'std::unordered_map<size_t,ID3D11SamplerState *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=ID3D11SamplerState *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(11): note: 'std::unordered_map<size_t,ID3D11SamplerState *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=ID3D11SamplerState *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(12): warning C4251: 'CResourceManager::m_mapRenderState': class 'std::unordered_map<size_t,CRenderState *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CRenderState *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(12): note: 'std::unordered_map<size_t,CRenderState *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CRenderState *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(13): warning C4251: 'CResourceManager::m_mapAnim2DSequence': class 'std::unordered_map<size_t,CAnimation2DSequence *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CAnimation2DSequence *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(13): note: 'std::unordered_map<size_t,CAnimation2DSequence *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CAnimation2DSequence *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): warning C4251: 'CResourceManager::m_DefaultMeshList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(15): warning C4251: 'CResourceManager::m_DefaultTextureList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(16): warning C4251: 'CResourceManager::m_DefaultRenderStateList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(17): warning C4251: 'CResourceManager::m_DefaultMaterialList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(18): warning C4251: 'CResourceManager::m_MaterialIter': class 'std::_List_iterator<std::_List_val<std::_List_simple_types<_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::pair<const size_t,CMaterial *>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\list(457): note: 'std::_List_iterator<std::_List_val<std::_List_simple_types<_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::pair<const size_t,CMaterial *>
          ]
d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(8): warning C4251: 'CShaderManager::m_mapShader': class 'std::unordered_map<size_t,CShader *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CShader *
          ]
  d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(8): note: 'std::unordered_map<size_t,CShader *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CShader *
          ]
d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(9): warning C4251: 'CShaderManager::m_mapInputLayout': class 'std::unordered_map<size_t,ID3D11InputLayout *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=ID3D11InputLayout *
          ]
  d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(9): note: 'std::unordered_map<size_t,ID3D11InputLayout *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=ID3D11InputLayout *
          ]
d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(10): warning C4251: 'CShaderManager::m_mapCBuffer': class 'std::unordered_map<size_t,PCBuffer,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=PCBuffer
          ]
  d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(10): note: 'std::unordered_map<size_t,PCBuffer,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=PCBuffer
          ]
d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(11): warning C4251: 'CShaderManager::m_vecInputDesc': class 'std::vector<D3D11_INPUT_ELEMENT_DESC,std::allocator<_Ty>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=D3D11_INPUT_ELEMENT_DESC
          ]
  d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(11): note: 'std::vector<D3D11_INPUT_ELEMENT_DESC,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=D3D11_INPUT_ELEMENT_DESC
          ]
d:\mingyu\newdx\gameengine\include\resource\blendstate.h(15): warning C4251: 'CBlendState::m_vecDesc': class 'std::vector<D3D11_RENDER_TARGET_BLEND_DESC,std::allocator<_Ty>>'에서는 class 'CBlendState'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=D3D11_RENDER_TARGET_BLEND_DESC
          ]
  d:\mingyu\newdx\gameengine\include\resource\blendstate.h(15): note: 'std::vector<D3D11_RENDER_TARGET_BLEND_DESC,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=D3D11_RENDER_TARGET_BLEND_DESC
          ]
d:\mingyu\newdx\gameengine\include\resource\material.h(43): warning C4251: 'CMaterial::m_vecContainer': class 'std::vector<PMaterialContainer,std::allocator<_Ty>>'에서는 class 'CMaterial'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=PMaterialContainer
          ]
  d:\mingyu\newdx\gameengine\include\resource\material.h(43): note: 'std::vector<PMaterialContainer,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=PMaterialContainer
          ]
d:\mingyu\newdx\gameengine\include\resource\material.h(47): warning C4251: 'CMaterial::m_mapCBuffer': class 'std::unordered_map<size_t,PCBufferNode,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CMaterial'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=PCBufferNode
          ]
  d:\mingyu\newdx\gameengine\include\resource\material.h(47): note: 'std::unordered_map<size_t,PCBufferNode,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=PCBufferNode
          ]
d:\mingyu\newdx\gameengine\include\scene\scene.h(26): warning C4251: 'CScene::m_ObjList': class 'std::list<CGameObject *,std::allocator<_Ty>>'에서는 class 'CScene'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CGameObject *
          ]
  d:\mingyu\newdx\gameengine\include\scene\scene.h(26): note: 'std::list<CGameObject *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CGameObject *
          ]
d:\mingyu\newdx\gameengine\include\scene\scene.h(27): warning C4251: 'CScene::m_BeginList': class 'std::list<CGameObject *,std::allocator<_Ty>>'에서는 class 'CScene'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CGameObject *
          ]
  d:\mingyu\newdx\gameengine\include\scene\scene.h(26): note: 'std::list<CGameObject *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CGameObject *
          ]
d:\mingyu\newdx\gameengine\include\cameramanager.h(14): warning C4251: 'CCameraManager::m_CameraList': class 'std::list<CCameraComponent *,std::allocator<_Ty>>'에서는 class 'CCameraManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CCameraComponent *
          ]
  d:\mingyu\newdx\gameengine\include\cameramanager.h(14): note: 'std::list<CCameraComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CCameraComponent *
          ]
d:\mingyu\newdx\gameengine\include\component\scenecomponent.h(15): warning C4251: 'CSceneComponent::m_vecChild': class 'std::vector<CSceneComponent *,std::allocator<_Ty>>'에서는 class 'CSceneComponent'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CSceneComponent *
          ]
  d:\mingyu\newdx\gameengine\include\component\scenecomponent.h(15): note: 'std::vector<CSceneComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CSceneComponent *
          ]
d:\mingyu\newdx\gameengine\include\component\tile.cpp(218): warning C4267: '인수': 'size_t'에서 'int'(으)로 변환하면서 데이터가 손실될 수 있습니다.
d:\mingyu\newdx\gameengine\include\component\tile.cpp(275): warning C4267: '인수': 'size_t'에서 'int'(으)로 변환하면서 데이터가 손실될 수 있습니다.
  코드를 생성하고 있습니다...
  컴파일하고 있습니다...
  TileMap.cpp
d:\mingyu\newdx\gameengine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.17763.0\um\directxmath.h(432): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\ref.h(13): warning C4251: 'CRef::m_strName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CRef'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\component\scenecomponent.h(15): warning C4251: 'CSceneComponent::m_vecChild': class 'std::vector<CSceneComponent *,std::allocator<_Ty>>'에서는 class 'CSceneComponent'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CSceneComponent *
          ]
  d:\mingyu\newdx\gameengine\include\component\scenecomponent.h(15): note: 'std::vector<CSceneComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CSceneComponent *
          ]
d:\mingyu\newdx\gameengine\include\component\tilemap.h(32): warning C4251: 'CTileMap::m_vecFrame': class 'std::vector<ImageFrame,std::allocator<_Ty>>'에서는 class 'CTileMap'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=ImageFrame
          ]
  d:\mingyu\newdx\gameengine\include\component\tilemap.h(32): note: 'std::vector<ImageFrame,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=ImageFrame
          ]
d:\mingyu\newdx\gameengine\include\resource\mesh.h(22): warning C4251: 'CMesh::m_vecMeshContainer': class 'std::vector<PMeshContainer,std::allocator<_Ty>>'에서는 class 'CMesh'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=PMeshContainer
          ]
  d:\mingyu\newdx\gameengine\include\resource\mesh.h(22): note: 'std::vector<PMeshContainer,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=PMeshContainer
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(8): warning C4251: 'CResourceManager::m_mapMesh': class 'std::unordered_map<size_t,CMesh *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CMesh *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(8): note: 'std::unordered_map<size_t,CMesh *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CMesh *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(9): warning C4251: 'CResourceManager::m_mapTexture': class 'std::unordered_map<size_t,CTexture *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CTexture *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(9): note: 'std::unordered_map<size_t,CTexture *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CTexture *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(10): warning C4251: 'CResourceManager::m_mapMaterial': class 'std::unordered_map<size_t,CMaterial *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CMaterial *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(10): note: 'std::unordered_map<size_t,CMaterial *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CMaterial *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(11): warning C4251: 'CResourceManager::m_mapSampler': class 'std::unordered_map<size_t,ID3D11SamplerState *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=ID3D11SamplerState *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(11): note: 'std::unordered_map<size_t,ID3D11SamplerState *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=ID3D11SamplerState *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(12): warning C4251: 'CResourceManager::m_mapRenderState': class 'std::unordered_map<size_t,CRenderState *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CRenderState *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(12): note: 'std::unordered_map<size_t,CRenderState *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CRenderState *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(13): warning C4251: 'CResourceManager::m_mapAnim2DSequence': class 'std::unordered_map<size_t,CAnimation2DSequence *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CAnimation2DSequence *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(13): note: 'std::unordered_map<size_t,CAnimation2DSequence *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CAnimation2DSequence *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): warning C4251: 'CResourceManager::m_DefaultMeshList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(15): warning C4251: 'CResourceManager::m_DefaultTextureList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(16): warning C4251: 'CResourceManager::m_DefaultRenderStateList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(17): warning C4251: 'CResourceManager::m_DefaultMaterialList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(18): warning C4251: 'CResourceManager::m_MaterialIter': class 'std::_List_iterator<std::_List_val<std::_List_simple_types<_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::pair<const size_t,CMaterial *>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\list(457): note: 'std::_List_iterator<std::_List_val<std::_List_simple_types<_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::pair<const size_t,CMaterial *>
          ]
d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(8): warning C4251: 'CShaderManager::m_mapShader': class 'std::unordered_map<size_t,CShader *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CShader *
          ]
  d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(8): note: 'std::unordered_map<size_t,CShader *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CShader *
          ]
d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(9): warning C4251: 'CShaderManager::m_mapInputLayout': class 'std::unordered_map<size_t,ID3D11InputLayout *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=ID3D11InputLayout *
          ]
  d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(9): note: 'std::unordered_map<size_t,ID3D11InputLayout *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=ID3D11InputLayout *
          ]
d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(10): warning C4251: 'CShaderManager::m_mapCBuffer': class 'std::unordered_map<size_t,PCBuffer,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=PCBuffer
          ]
  d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(10): note: 'std::unordered_map<size_t,PCBuffer,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=PCBuffer
          ]
d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(11): warning C4251: 'CShaderManager::m_vecInputDesc': class 'std::vector<D3D11_INPUT_ELEMENT_DESC,std::allocator<_Ty>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=D3D11_INPUT_ELEMENT_DESC
          ]
  d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(11): note: 'std::vector<D3D11_INPUT_ELEMENT_DESC,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=D3D11_INPUT_ELEMENT_DESC
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(23): warning C4251: 'CColliderBase::m_vecBlockCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(24): warning C4251: 'CColliderBase::m_vecBeginOverlapCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(25): warning C4251: 'CColliderBase::m_vecEndOverlapCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(28): warning C4251: 'CColliderBase::m_CurrentFrameCollision': class 'std::list<CColliderBase *,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CColliderBase *
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(28): note: 'std::list<CColliderBase *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CColliderBase *
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(29): warning C4251: 'CColliderBase::m_CollisionList': class 'std::list<CColliderBase *,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CColliderBase *
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(28): note: 'std::list<CColliderBase *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CColliderBase *
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(30): warning C4251: 'CColliderBase::m_vecSectionIndex': class 'std::vector<unsigned int,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=unsigned int
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(30): note: 'std::vector<unsigned int,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=unsigned int
          ]
d:\mingyu\newdx\gameengine\include\object\gameobject.h(19): warning C4251: 'CGameObject::m_vecObjComponent': class 'std::vector<CObjectComponent *,std::allocator<_Ty>>'에서는 class 'CGameObject'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CObjectComponent *
          ]
  d:\mingyu\newdx\gameengine\include\object\gameobject.h(19): note: 'std::vector<CObjectComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CObjectComponent *
          ]
d:\mingyu\newdx\gameengine\include\object\gameobject.h(20): warning C4251: 'CGameObject::m_vecChild': class 'std::vector<CGameObject *,std::allocator<_Ty>>'에서는 class 'CGameObject'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CGameObject *
          ]
  d:\mingyu\newdx\gameengine\include\object\gameobject.h(20): note: 'std::vector<CGameObject *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CGameObject *
          ]
d:\mingyu\newdx\gameengine\include\object\gameobject.h(22): warning C4251: 'CGameObject::m_BeginList': class 'std::list<CComponent *,std::allocator<_Ty>>'에서는 class 'CGameObject'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CComponent *
          ]
  d:\mingyu\newdx\gameengine\include\object\gameobject.h(22): note: 'std::list<CComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CComponent *
          ]
d:\mingyu\newdx\gameengine\include\resource\blendstate.h(15): warning C4251: 'CBlendState::m_vecDesc': class 'std::vector<D3D11_RENDER_TARGET_BLEND_DESC,std::allocator<_Ty>>'에서는 class 'CBlendState'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=D3D11_RENDER_TARGET_BLEND_DESC
          ]
  d:\mingyu\newdx\gameengine\include\resource\blendstate.h(15): note: 'std::vector<D3D11_RENDER_TARGET_BLEND_DESC,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=D3D11_RENDER_TARGET_BLEND_DESC
          ]
d:\mingyu\newdx\gameengine\include\resource\material.h(43): warning C4251: 'CMaterial::m_vecContainer': class 'std::vector<PMaterialContainer,std::allocator<_Ty>>'에서는 class 'CMaterial'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=PMaterialContainer
          ]
  d:\mingyu\newdx\gameengine\include\resource\material.h(43): note: 'std::vector<PMaterialContainer,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=PMaterialContainer
          ]
d:\mingyu\newdx\gameengine\include\resource\material.h(47): warning C4251: 'CMaterial::m_mapCBuffer': class 'std::unordered_map<size_t,PCBufferNode,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CMaterial'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=PCBufferNode
          ]
  d:\mingyu\newdx\gameengine\include\resource\material.h(47): note: 'std::unordered_map<size_t,PCBufferNode,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=PCBufferNode
          ]
d:\mingyu\newdx\gameengine\include\scene\scene.h(26): warning C4251: 'CScene::m_ObjList': class 'std::list<CGameObject *,std::allocator<_Ty>>'에서는 class 'CScene'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CGameObject *
          ]
  d:\mingyu\newdx\gameengine\include\scene\scene.h(26): note: 'std::list<CGameObject *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CGameObject *
          ]
d:\mingyu\newdx\gameengine\include\scene\scene.h(27): warning C4251: 'CScene::m_BeginList': class 'std::list<CGameObject *,std::allocator<_Ty>>'에서는 class 'CScene'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CGameObject *
          ]
  d:\mingyu\newdx\gameengine\include\scene\scene.h(26): note: 'std::list<CGameObject *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CGameObject *
          ]
d:\mingyu\newdx\gameengine\include\scene\navigation2d.h(16): warning C4251: 'CNavigation2D::m_PathList': class 'std::list<Vector3,std::allocator<_Ty>>'에서는 class 'CNavigation2D'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=Vector3
          ]
  d:\mingyu\newdx\gameengine\include\scene\navigation2d.h(16): note: 'std::list<Vector3,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=Vector3
          ]
d:\mingyu\newdx\gameengine\include\scene\navigation2d.h(17): warning C4251: 'CNavigation2D::m_vecOpen': class 'std::vector<CTile *,std::allocator<_Ty>>'에서는 class 'CNavigation2D'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CTile *
          ]
  d:\mingyu\newdx\gameengine\include\scene\navigation2d.h(17): note: 'std::vector<CTile *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CTile *
          ]
d:\mingyu\newdx\gameengine\include\scene\navigation2d.h(18): warning C4251: 'CNavigation2D::m_vecUse': class 'std::vector<CTile *,std::allocator<_Ty>>'에서는 class 'CNavigation2D'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CTile *
          ]
  d:\mingyu\newdx\gameengine\include\scene\navigation2d.h(17): note: 'std::vector<CTile *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CTile *
          ]
d:\mingyu\newdx\gameengine\include\cameramanager.h(14): warning C4251: 'CCameraManager::m_CameraList': class 'std::list<CCameraComponent *,std::allocator<_Ty>>'에서는 class 'CCameraManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CCameraComponent *
          ]
  d:\mingyu\newdx\gameengine\include\cameramanager.h(14): note: 'std::list<CCameraComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CCameraComponent *
          ]
d:\mingyu\newdx\gameengine\include\component\transform.h(16): warning C4251: 'CTransform::m_vecChild': class 'std::vector<CTransform *,std::allocator<_Ty>>'에서는 class 'CTransform'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CTransform *
          ]
  d:\mingyu\newdx\gameengine\include\component\transform.h(16): note: 'std::vector<CTransform *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CTransform *
          ]
d:\mingyu\newdx\gameengine\include\component\tilemap.cpp(276): warning C4267: '=': 'size_t'에서 'int'(으)로 변환하면서 데이터가 손실될 수 있습니다.
d:\mingyu\newdx\gameengine\include\component\tilemap.cpp(352): warning C4018: '>=': signed 또는 unsigned가 일치하지 않습니다.
d:\mingyu\newdx\gameengine\include\component\tilemap.cpp(374): warning C4018: '>=': signed 또는 unsigned가 일치하지 않습니다.
d:\mingyu\newdx\gameengine\include\component\tilemap.cpp(417): warning C4244: '인수': 'int'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
d:\mingyu\newdx\gameengine\include\component\tilemap.cpp(427): warning C4018: '>=': signed 또는 unsigned가 일치하지 않습니다.
d:\mingyu\newdx\gameengine\include\component\tilemap.cpp(428): warning C4018: '>=': signed 또는 unsigned가 일치하지 않습니다.
d:\mingyu\newdx\gameengine\include\component\tilemap.cpp(469): warning C4267: '인수': 'size_t'에서 'int'(으)로 변환하면서 데이터가 손실될 수 있습니다.
  Transform.cpp
d:\mingyu\newdx\gameengine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.17763.0\um\directxmath.h(432): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\component\transform.h(16): warning C4251: 'CTransform::m_vecChild': class 'std::vector<CTransform *,std::allocator<_Ty>>'에서는 class 'CTransform'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CTransform *
          ]
  d:\mingyu\newdx\gameengine\include\component\transform.h(16): note: 'std::vector<CTransform *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CTransform *
          ]
d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(8): warning C4251: 'CShaderManager::m_mapShader': class 'std::unordered_map<size_t,CShader *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CShader *
          ]
  d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(8): note: 'std::unordered_map<size_t,CShader *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CShader *
          ]
d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(9): warning C4251: 'CShaderManager::m_mapInputLayout': class 'std::unordered_map<size_t,ID3D11InputLayout *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=ID3D11InputLayout *
          ]
  d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(9): note: 'std::unordered_map<size_t,ID3D11InputLayout *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=ID3D11InputLayout *
          ]
d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(10): warning C4251: 'CShaderManager::m_mapCBuffer': class 'std::unordered_map<size_t,PCBuffer,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=PCBuffer
          ]
  d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(10): note: 'std::unordered_map<size_t,PCBuffer,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=PCBuffer
          ]
d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(11): warning C4251: 'CShaderManager::m_vecInputDesc': class 'std::vector<D3D11_INPUT_ELEMENT_DESC,std::allocator<_Ty>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=D3D11_INPUT_ELEMENT_DESC
          ]
  d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(11): note: 'std::vector<D3D11_INPUT_ELEMENT_DESC,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=D3D11_INPUT_ELEMENT_DESC
          ]
d:\mingyu\newdx\gameengine\include\ref.h(13): warning C4251: 'CRef::m_strName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CRef'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\component\scenecomponent.h(15): warning C4251: 'CSceneComponent::m_vecChild': class 'std::vector<CSceneComponent *,std::allocator<_Ty>>'에서는 class 'CSceneComponent'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CSceneComponent *
          ]
  d:\mingyu\newdx\gameengine\include\component\scenecomponent.h(15): note: 'std::vector<CSceneComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CSceneComponent *
          ]
d:\mingyu\newdx\gameengine\include\object\gameobject.h(19): warning C4251: 'CGameObject::m_vecObjComponent': class 'std::vector<CObjectComponent *,std::allocator<_Ty>>'에서는 class 'CGameObject'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CObjectComponent *
          ]
  d:\mingyu\newdx\gameengine\include\object\gameobject.h(19): note: 'std::vector<CObjectComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CObjectComponent *
          ]
d:\mingyu\newdx\gameengine\include\object\gameobject.h(20): warning C4251: 'CGameObject::m_vecChild': class 'std::vector<CGameObject *,std::allocator<_Ty>>'에서는 class 'CGameObject'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CGameObject *
          ]
  d:\mingyu\newdx\gameengine\include\object\gameobject.h(20): note: 'std::vector<CGameObject *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CGameObject *
          ]
d:\mingyu\newdx\gameengine\include\object\gameobject.h(22): warning C4251: 'CGameObject::m_BeginList': class 'std::list<CComponent *,std::allocator<_Ty>>'에서는 class 'CGameObject'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CComponent *
          ]
  d:\mingyu\newdx\gameengine\include\object\gameobject.h(22): note: 'std::list<CComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CComponent *
          ]
d:\mingyu\newdx\gameengine\include\scene\scene.h(26): warning C4251: 'CScene::m_ObjList': class 'std::list<CGameObject *,std::allocator<_Ty>>'에서는 class 'CScene'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CGameObject *
          ]
  d:\mingyu\newdx\gameengine\include\scene\scene.h(26): note: 'std::list<CGameObject *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CGameObject *
          ]
d:\mingyu\newdx\gameengine\include\scene\scene.h(27): warning C4251: 'CScene::m_BeginList': class 'std::list<CGameObject *,std::allocator<_Ty>>'에서는 class 'CScene'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CGameObject *
          ]
  d:\mingyu\newdx\gameengine\include\scene\scene.h(26): note: 'std::list<CGameObject *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CGameObject *
          ]
d:\mingyu\newdx\gameengine\include\cameramanager.h(14): warning C4251: 'CCameraManager::m_CameraList': class 'std::list<CCameraComponent *,std::allocator<_Ty>>'에서는 class 'CCameraManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CCameraComponent *
          ]
  d:\mingyu\newdx\gameengine\include\cameramanager.h(14): note: 'std::list<CCameraComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CCameraComponent *
          ]
d:\mingyu\newdx\gameengine\include\render\rendermanager.h(17): warning C4251: 'CRenderManager::m_vecRender': class 'std::vector<CSceneComponent *,std::allocator<_Ty>>'에서는 class 'CRenderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CSceneComponent *
          ]
  d:\mingyu\newdx\gameengine\include\component\scenecomponent.h(15): note: 'std::vector<CSceneComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CSceneComponent *
          ]
d:\mingyu\newdx\gameengine\include\render\rendermanager.h(22): warning C4251: 'CRenderManager::m_vecInstancing': class 'std::vector<InstancingList,std::allocator<_Ty>>'에서는 class 'CRenderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=InstancingList
          ]
  d:\mingyu\newdx\gameengine\include\render\rendermanager.h(22): note: 'std::vector<InstancingList,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=InstancingList
          ]
d:\mingyu\newdx\gameengine\include\render\rendermanager.h(23): warning C4251: 'CRenderManager::m_vecStaticData': class 'std::vector<PStaticInstancingData,std::allocator<_Ty>>'에서는 class 'CRenderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=PStaticInstancingData
          ]
  d:\mingyu\newdx\gameengine\include\render\rendermanager.h(23): note: 'std::vector<PStaticInstancingData,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=PStaticInstancingData
          ]
d:\mingyu\newdx\gameengine\include\render\rendermanager.h(25): warning C4251: 'CRenderManager::m_vecAnim2DInstancing': class 'std::vector<InstancingList,std::allocator<_Ty>>'에서는 class 'CRenderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=InstancingList
          ]
  d:\mingyu\newdx\gameengine\include\render\rendermanager.h(22): note: 'std::vector<InstancingList,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=InstancingList
          ]
d:\mingyu\newdx\gameengine\include\render\rendermanager.h(27): warning C4251: 'CRenderManager::m_vecAnim2DData': class 'std::vector<PAnim2DInstancingData,std::allocator<_Ty>>'에서는 class 'CRenderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=PAnim2DInstancingData
          ]
  d:\mingyu\newdx\gameengine\include\render\rendermanager.h(27): note: 'std::vector<PAnim2DInstancingData,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=PAnim2DInstancingData
          ]
  UI.cpp
d:\mingyu\newdx\gameengine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.17763.0\um\directxmath.h(432): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\ref.h(13): warning C4251: 'CRef::m_strName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CRef'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\component\scenecomponent.h(15): warning C4251: 'CSceneComponent::m_vecChild': class 'std::vector<CSceneComponent *,std::allocator<_Ty>>'에서는 class 'CSceneComponent'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CSceneComponent *
          ]
  d:\mingyu\newdx\gameengine\include\component\scenecomponent.h(15): note: 'std::vector<CSceneComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CSceneComponent *
          ]
d:\mingyu\newdx\gameengine\include\resource\mesh.h(22): warning C4251: 'CMesh::m_vecMeshContainer': class 'std::vector<PMeshContainer,std::allocator<_Ty>>'에서는 class 'CMesh'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=PMeshContainer
          ]
  d:\mingyu\newdx\gameengine\include\resource\mesh.h(22): note: 'std::vector<PMeshContainer,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=PMeshContainer
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(8): warning C4251: 'CResourceManager::m_mapMesh': class 'std::unordered_map<size_t,CMesh *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CMesh *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(8): note: 'std::unordered_map<size_t,CMesh *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CMesh *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(9): warning C4251: 'CResourceManager::m_mapTexture': class 'std::unordered_map<size_t,CTexture *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CTexture *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(9): note: 'std::unordered_map<size_t,CTexture *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CTexture *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(10): warning C4251: 'CResourceManager::m_mapMaterial': class 'std::unordered_map<size_t,CMaterial *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CMaterial *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(10): note: 'std::unordered_map<size_t,CMaterial *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CMaterial *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(11): warning C4251: 'CResourceManager::m_mapSampler': class 'std::unordered_map<size_t,ID3D11SamplerState *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=ID3D11SamplerState *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(11): note: 'std::unordered_map<size_t,ID3D11SamplerState *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=ID3D11SamplerState *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(12): warning C4251: 'CResourceManager::m_mapRenderState': class 'std::unordered_map<size_t,CRenderState *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CRenderState *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(12): note: 'std::unordered_map<size_t,CRenderState *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CRenderState *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(13): warning C4251: 'CResourceManager::m_mapAnim2DSequence': class 'std::unordered_map<size_t,CAnimation2DSequence *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CAnimation2DSequence *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(13): note: 'std::unordered_map<size_t,CAnimation2DSequence *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CAnimation2DSequence *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): warning C4251: 'CResourceManager::m_DefaultMeshList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(15): warning C4251: 'CResourceManager::m_DefaultTextureList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(16): warning C4251: 'CResourceManager::m_DefaultRenderStateList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(17): warning C4251: 'CResourceManager::m_DefaultMaterialList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(18): warning C4251: 'CResourceManager::m_MaterialIter': class 'std::_List_iterator<std::_List_val<std::_List_simple_types<_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::pair<const size_t,CMaterial *>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\list(457): note: 'std::_List_iterator<std::_List_val<std::_List_simple_types<_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::pair<const size_t,CMaterial *>
          ]
d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(8): warning C4251: 'CShaderManager::m_mapShader': class 'std::unordered_map<size_t,CShader *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CShader *
          ]
  d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(8): note: 'std::unordered_map<size_t,CShader *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CShader *
          ]
d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(9): warning C4251: 'CShaderManager::m_mapInputLayout': class 'std::unordered_map<size_t,ID3D11InputLayout *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=ID3D11InputLayout *
          ]
  d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(9): note: 'std::unordered_map<size_t,ID3D11InputLayout *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=ID3D11InputLayout *
          ]
d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(10): warning C4251: 'CShaderManager::m_mapCBuffer': class 'std::unordered_map<size_t,PCBuffer,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=PCBuffer
          ]
  d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(10): note: 'std::unordered_map<size_t,PCBuffer,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=PCBuffer
          ]
d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(11): warning C4251: 'CShaderManager::m_vecInputDesc': class 'std::vector<D3D11_INPUT_ELEMENT_DESC,std::allocator<_Ty>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=D3D11_INPUT_ELEMENT_DESC
          ]
  d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(11): note: 'std::vector<D3D11_INPUT_ELEMENT_DESC,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=D3D11_INPUT_ELEMENT_DESC
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(23): warning C4251: 'CColliderBase::m_vecBlockCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(24): warning C4251: 'CColliderBase::m_vecBeginOverlapCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(25): warning C4251: 'CColliderBase::m_vecEndOverlapCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(28): warning C4251: 'CColliderBase::m_CurrentFrameCollision': class 'std::list<CColliderBase *,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CColliderBase *
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(28): note: 'std::list<CColliderBase *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CColliderBase *
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(29): warning C4251: 'CColliderBase::m_CollisionList': class 'std::list<CColliderBase *,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CColliderBase *
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(28): note: 'std::list<CColliderBase *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CColliderBase *
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(30): warning C4251: 'CColliderBase::m_vecSectionIndex': class 'std::vector<unsigned int,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=unsigned int
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(30): note: 'std::vector<unsigned int,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=unsigned int
          ]
d:\mingyu\newdx\gameengine\include\object\gameobject.h(19): warning C4251: 'CGameObject::m_vecObjComponent': class 'std::vector<CObjectComponent *,std::allocator<_Ty>>'에서는 class 'CGameObject'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CObjectComponent *
          ]
  d:\mingyu\newdx\gameengine\include\object\gameobject.h(19): note: 'std::vector<CObjectComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CObjectComponent *
          ]
d:\mingyu\newdx\gameengine\include\object\gameobject.h(20): warning C4251: 'CGameObject::m_vecChild': class 'std::vector<CGameObject *,std::allocator<_Ty>>'에서는 class 'CGameObject'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CGameObject *
          ]
  d:\mingyu\newdx\gameengine\include\object\gameobject.h(20): note: 'std::vector<CGameObject *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CGameObject *
          ]
d:\mingyu\newdx\gameengine\include\object\gameobject.h(22): warning C4251: 'CGameObject::m_BeginList': class 'std::list<CComponent *,std::allocator<_Ty>>'에서는 class 'CGameObject'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CComponent *
          ]
  d:\mingyu\newdx\gameengine\include\object\gameobject.h(22): note: 'std::list<CComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CComponent *
          ]
d:\mingyu\newdx\gameengine\include\resource\blendstate.h(15): warning C4251: 'CBlendState::m_vecDesc': class 'std::vector<D3D11_RENDER_TARGET_BLEND_DESC,std::allocator<_Ty>>'에서는 class 'CBlendState'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=D3D11_RENDER_TARGET_BLEND_DESC
          ]
  d:\mingyu\newdx\gameengine\include\resource\blendstate.h(15): note: 'std::vector<D3D11_RENDER_TARGET_BLEND_DESC,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=D3D11_RENDER_TARGET_BLEND_DESC
          ]
d:\mingyu\newdx\gameengine\include\component\ui.cpp(144): warning C4267: '인수': 'size_t'에서 'int'(으)로 변환하면서 데이터가 손실될 수 있습니다.
  UIAnimation.cpp
d:\mingyu\newdx\gameengine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.17763.0\um\directxmath.h(432): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\ref.h(13): warning C4251: 'CRef::m_strName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CRef'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\component\scenecomponent.h(15): warning C4251: 'CSceneComponent::m_vecChild': class 'std::vector<CSceneComponent *,std::allocator<_Ty>>'에서는 class 'CSceneComponent'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CSceneComponent *
          ]
  d:\mingyu\newdx\gameengine\include\component\scenecomponent.h(15): note: 'std::vector<CSceneComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CSceneComponent *
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(23): warning C4251: 'CColliderBase::m_vecBlockCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(24): warning C4251: 'CColliderBase::m_vecBeginOverlapCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(25): warning C4251: 'CColliderBase::m_vecEndOverlapCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(28): warning C4251: 'CColliderBase::m_CurrentFrameCollision': class 'std::list<CColliderBase *,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CColliderBase *
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(28): note: 'std::list<CColliderBase *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CColliderBase *
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(29): warning C4251: 'CColliderBase::m_CollisionList': class 'std::list<CColliderBase *,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CColliderBase *
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(28): note: 'std::list<CColliderBase *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CColliderBase *
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(30): warning C4251: 'CColliderBase::m_vecSectionIndex': class 'std::vector<unsigned int,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=unsigned int
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(30): note: 'std::vector<unsigned int,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=unsigned int
          ]
d:\mingyu\newdx\gameengine\include\resource\mesh.h(22): warning C4251: 'CMesh::m_vecMeshContainer': class 'std::vector<PMeshContainer,std::allocator<_Ty>>'에서는 class 'CMesh'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=PMeshContainer
          ]
  d:\mingyu\newdx\gameengine\include\resource\mesh.h(22): note: 'std::vector<PMeshContainer,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=PMeshContainer
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(8): warning C4251: 'CResourceManager::m_mapMesh': class 'std::unordered_map<size_t,CMesh *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CMesh *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(8): note: 'std::unordered_map<size_t,CMesh *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CMesh *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(9): warning C4251: 'CResourceManager::m_mapTexture': class 'std::unordered_map<size_t,CTexture *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CTexture *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(9): note: 'std::unordered_map<size_t,CTexture *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CTexture *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(10): warning C4251: 'CResourceManager::m_mapMaterial': class 'std::unordered_map<size_t,CMaterial *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CMaterial *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(10): note: 'std::unordered_map<size_t,CMaterial *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CMaterial *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(11): warning C4251: 'CResourceManager::m_mapSampler': class 'std::unordered_map<size_t,ID3D11SamplerState *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=ID3D11SamplerState *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(11): note: 'std::unordered_map<size_t,ID3D11SamplerState *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=ID3D11SamplerState *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(12): warning C4251: 'CResourceManager::m_mapRenderState': class 'std::unordered_map<size_t,CRenderState *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CRenderState *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(12): note: 'std::unordered_map<size_t,CRenderState *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CRenderState *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(13): warning C4251: 'CResourceManager::m_mapAnim2DSequence': class 'std::unordered_map<size_t,CAnimation2DSequence *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CAnimation2DSequence *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(13): note: 'std::unordered_map<size_t,CAnimation2DSequence *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CAnimation2DSequence *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): warning C4251: 'CResourceManager::m_DefaultMeshList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(15): warning C4251: 'CResourceManager::m_DefaultTextureList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(16): warning C4251: 'CResourceManager::m_DefaultRenderStateList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(17): warning C4251: 'CResourceManager::m_DefaultMaterialList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(18): warning C4251: 'CResourceManager::m_MaterialIter': class 'std::_List_iterator<std::_List_val<std::_List_simple_types<_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::pair<const size_t,CMaterial *>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\list(457): note: 'std::_List_iterator<std::_List_val<std::_List_simple_types<_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::pair<const size_t,CMaterial *>
          ]
d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(8): warning C4251: 'CShaderManager::m_mapShader': class 'std::unordered_map<size_t,CShader *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CShader *
          ]
  d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(8): note: 'std::unordered_map<size_t,CShader *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CShader *
          ]
d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(9): warning C4251: 'CShaderManager::m_mapInputLayout': class 'std::unordered_map<size_t,ID3D11InputLayout *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=ID3D11InputLayout *
          ]
  d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(9): note: 'std::unordered_map<size_t,ID3D11InputLayout *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=ID3D11InputLayout *
          ]
d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(10): warning C4251: 'CShaderManager::m_mapCBuffer': class 'std::unordered_map<size_t,PCBuffer,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=PCBuffer
          ]
  d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(10): note: 'std::unordered_map<size_t,PCBuffer,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=PCBuffer
          ]
d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(11): warning C4251: 'CShaderManager::m_vecInputDesc': class 'std::vector<D3D11_INPUT_ELEMENT_DESC,std::allocator<_Ty>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=D3D11_INPUT_ELEMENT_DESC
          ]
  d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(11): note: 'std::vector<D3D11_INPUT_ELEMENT_DESC,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=D3D11_INPUT_ELEMENT_DESC
          ]
d:\mingyu\newdx\gameengine\include\resource\blendstate.h(15): warning C4251: 'CBlendState::m_vecDesc': class 'std::vector<D3D11_RENDER_TARGET_BLEND_DESC,std::allocator<_Ty>>'에서는 class 'CBlendState'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=D3D11_RENDER_TARGET_BLEND_DESC
          ]
  d:\mingyu\newdx\gameengine\include\resource\blendstate.h(15): note: 'std::vector<D3D11_RENDER_TARGET_BLEND_DESC,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=D3D11_RENDER_TARGET_BLEND_DESC
          ]
d:\mingyu\newdx\gameengine\include\resource\texture.h(14): warning C4251: 'CTexture::m_vecImage': class 'std::vector<DirectX::ScratchImage *,std::allocator<_Ty>>'에서는 class 'CTexture'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=DirectX::ScratchImage *
          ]
  d:\mingyu\newdx\gameengine\include\resource\texture.h(14): note: 'std::vector<DirectX::ScratchImage *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=DirectX::ScratchImage *
          ]
d:\mingyu\newdx\gameengine\include\resource\texture.h(15): warning C4251: 'CTexture::m_vecFileName': class 'std::vector<const TCHAR *,std::allocator<_Ty>>'에서는 class 'CTexture'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=const TCHAR *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(40): note: 'std::vector<const TCHAR *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=const TCHAR *
          ]
d:\mingyu\newdx\gameengine\include\resource\texture.h(16): warning C4251: 'CTexture::m_strPathName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CTexture'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\resource\animation2dsequence.h(41): warning C4251: 'CAnimation2DSequence::m_vecTexture': class 'std::vector<CTexture *,std::allocator<_Ty>>'에서는 class 'CAnimation2DSequence'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CTexture *
          ]
  d:\mingyu\newdx\gameengine\include\resource\animation2dsequence.h(41): note: 'std::vector<CTexture *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CTexture *
          ]
d:\mingyu\newdx\gameengine\include\resource\animation2dsequence.h(51): warning C4251: 'CAnimation2DSequence::m_NotifyList': class 'std::list<PAnim2DNotify,std::allocator<_Ty>>'에서는 class 'CAnimation2DSequence'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=PAnim2DNotify
          ]
  d:\mingyu\newdx\gameengine\include\resource\animation2dsequence.h(51): note: 'std::list<PAnim2DNotify,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=PAnim2DNotify
          ]
d:\mingyu\newdx\gameengine\include\resource\animation2dsequence.h(52): warning C4251: 'CAnimation2DSequence::m_vecFrameInfo': class 'std::vector<Animation2DFrameInfo,std::allocator<_Ty>>'에서는 class 'CAnimation2DSequence'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=Animation2DFrameInfo
          ]
  d:\mingyu\newdx\gameengine\include\resource\animation2dsequence.h(52): note: 'std::vector<Animation2DFrameInfo,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=Animation2DFrameInfo
          ]
d:\mingyu\newdx\gameengine\include\resource\animation2dsequence.h(55): warning C4251: 'CAnimation2DSequence::m_strReturnSequence': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CAnimation2DSequence'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\component\animation2d.h(35): warning C4251: 'CAnimation2D::m_mapAnimSequence': class 'std::unordered_map<size_t,CAnimation2DSequence *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CAnimation2D'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CAnimation2DSequence *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(13): note: 'std::unordered_map<size_t,CAnimation2DSequence *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CAnimation2DSequence *
          ]
  UIBar.cpp
d:\mingyu\newdx\gameengine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.17763.0\um\directxmath.h(432): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\ref.h(13): warning C4251: 'CRef::m_strName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CRef'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\component\scenecomponent.h(15): warning C4251: 'CSceneComponent::m_vecChild': class 'std::vector<CSceneComponent *,std::allocator<_Ty>>'에서는 class 'CSceneComponent'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CSceneComponent *
          ]
  d:\mingyu\newdx\gameengine\include\component\scenecomponent.h(15): note: 'std::vector<CSceneComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CSceneComponent *
          ]
d:\mingyu\newdx\gameengine\include\resource\texture.h(14): warning C4251: 'CTexture::m_vecImage': class 'std::vector<DirectX::ScratchImage *,std::allocator<_Ty>>'에서는 class 'CTexture'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=DirectX::ScratchImage *
          ]
  d:\mingyu\newdx\gameengine\include\resource\texture.h(14): note: 'std::vector<DirectX::ScratchImage *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=DirectX::ScratchImage *
          ]
d:\mingyu\newdx\gameengine\include\resource\texture.h(15): warning C4251: 'CTexture::m_vecFileName': class 'std::vector<const TCHAR *,std::allocator<_Ty>>'에서는 class 'CTexture'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=const TCHAR *
          ]
  d:\mingyu\newdx\gameengine\include\resource\texture.h(15): note: 'std::vector<const TCHAR *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=const TCHAR *
          ]
d:\mingyu\newdx\gameengine\include\resource\texture.h(16): warning C4251: 'CTexture::m_strPathName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CTexture'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(8): warning C4251: 'CResourceManager::m_mapMesh': class 'std::unordered_map<size_t,CMesh *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CMesh *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(8): note: 'std::unordered_map<size_t,CMesh *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CMesh *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(9): warning C4251: 'CResourceManager::m_mapTexture': class 'std::unordered_map<size_t,CTexture *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CTexture *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(9): note: 'std::unordered_map<size_t,CTexture *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CTexture *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(10): warning C4251: 'CResourceManager::m_mapMaterial': class 'std::unordered_map<size_t,CMaterial *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CMaterial *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(10): note: 'std::unordered_map<size_t,CMaterial *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CMaterial *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(11): warning C4251: 'CResourceManager::m_mapSampler': class 'std::unordered_map<size_t,ID3D11SamplerState *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=ID3D11SamplerState *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(11): note: 'std::unordered_map<size_t,ID3D11SamplerState *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=ID3D11SamplerState *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(12): warning C4251: 'CResourceManager::m_mapRenderState': class 'std::unordered_map<size_t,CRenderState *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CRenderState *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(12): note: 'std::unordered_map<size_t,CRenderState *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CRenderState *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(13): warning C4251: 'CResourceManager::m_mapAnim2DSequence': class 'std::unordered_map<size_t,CAnimation2DSequence *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CAnimation2DSequence *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(13): note: 'std::unordered_map<size_t,CAnimation2DSequence *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CAnimation2DSequence *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): warning C4251: 'CResourceManager::m_DefaultMeshList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(15): warning C4251: 'CResourceManager::m_DefaultTextureList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(16): warning C4251: 'CResourceManager::m_DefaultRenderStateList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(17): warning C4251: 'CResourceManager::m_DefaultMaterialList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(18): warning C4251: 'CResourceManager::m_MaterialIter': class 'std::_List_iterator<std::_List_val<std::_List_simple_types<_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::pair<const size_t,CMaterial *>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\list(457): note: 'std::_List_iterator<std::_List_val<std::_List_simple_types<_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::pair<const size_t,CMaterial *>
          ]
d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(8): warning C4251: 'CShaderManager::m_mapShader': class 'std::unordered_map<size_t,CShader *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CShader *
          ]
  d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(8): note: 'std::unordered_map<size_t,CShader *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CShader *
          ]
d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(9): warning C4251: 'CShaderManager::m_mapInputLayout': class 'std::unordered_map<size_t,ID3D11InputLayout *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=ID3D11InputLayout *
          ]
  d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(9): note: 'std::unordered_map<size_t,ID3D11InputLayout *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=ID3D11InputLayout *
          ]
d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(10): warning C4251: 'CShaderManager::m_mapCBuffer': class 'std::unordered_map<size_t,PCBuffer,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=PCBuffer
          ]
  d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(10): note: 'std::unordered_map<size_t,PCBuffer,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=PCBuffer
          ]
d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(11): warning C4251: 'CShaderManager::m_vecInputDesc': class 'std::vector<D3D11_INPUT_ELEMENT_DESC,std::allocator<_Ty>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=D3D11_INPUT_ELEMENT_DESC
          ]
  d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(11): note: 'std::vector<D3D11_INPUT_ELEMENT_DESC,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=D3D11_INPUT_ELEMENT_DESC
          ]
  UIButton.cpp
d:\mingyu\newdx\gameengine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.17763.0\um\directxmath.h(432): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\ref.h(13): warning C4251: 'CRef::m_strName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CRef'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\component\scenecomponent.h(15): warning C4251: 'CSceneComponent::m_vecChild': class 'std::vector<CSceneComponent *,std::allocator<_Ty>>'에서는 class 'CSceneComponent'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CSceneComponent *
          ]
  d:\mingyu\newdx\gameengine\include\component\scenecomponent.h(15): note: 'std::vector<CSceneComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CSceneComponent *
          ]
d:\mingyu\newdx\gameengine\include\component\uibutton.h(31): warning C4251: 'CUIButton::m_Event': class 'std::function<void (float)>'에서는 class 'CUIButton'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  d:\mingyu\newdx\gameengine\include\component\uibutton.h(31): note: 'std::function<void (float)>' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\resource\texture.h(14): warning C4251: 'CTexture::m_vecImage': class 'std::vector<DirectX::ScratchImage *,std::allocator<_Ty>>'에서는 class 'CTexture'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=DirectX::ScratchImage *
          ]
  d:\mingyu\newdx\gameengine\include\resource\texture.h(14): note: 'std::vector<DirectX::ScratchImage *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=DirectX::ScratchImage *
          ]
d:\mingyu\newdx\gameengine\include\resource\texture.h(15): warning C4251: 'CTexture::m_vecFileName': class 'std::vector<const TCHAR *,std::allocator<_Ty>>'에서는 class 'CTexture'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=const TCHAR *
          ]
  d:\mingyu\newdx\gameengine\include\resource\texture.h(15): note: 'std::vector<const TCHAR *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=const TCHAR *
          ]
d:\mingyu\newdx\gameengine\include\resource\texture.h(16): warning C4251: 'CTexture::m_strPathName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CTexture'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(8): warning C4251: 'CResourceManager::m_mapMesh': class 'std::unordered_map<size_t,CMesh *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CMesh *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(8): note: 'std::unordered_map<size_t,CMesh *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CMesh *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(9): warning C4251: 'CResourceManager::m_mapTexture': class 'std::unordered_map<size_t,CTexture *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CTexture *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(9): note: 'std::unordered_map<size_t,CTexture *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CTexture *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(10): warning C4251: 'CResourceManager::m_mapMaterial': class 'std::unordered_map<size_t,CMaterial *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CMaterial *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(10): note: 'std::unordered_map<size_t,CMaterial *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CMaterial *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(11): warning C4251: 'CResourceManager::m_mapSampler': class 'std::unordered_map<size_t,ID3D11SamplerState *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=ID3D11SamplerState *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(11): note: 'std::unordered_map<size_t,ID3D11SamplerState *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=ID3D11SamplerState *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(12): warning C4251: 'CResourceManager::m_mapRenderState': class 'std::unordered_map<size_t,CRenderState *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CRenderState *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(12): note: 'std::unordered_map<size_t,CRenderState *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CRenderState *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(13): warning C4251: 'CResourceManager::m_mapAnim2DSequence': class 'std::unordered_map<size_t,CAnimation2DSequence *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CAnimation2DSequence *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(13): note: 'std::unordered_map<size_t,CAnimation2DSequence *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CAnimation2DSequence *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): warning C4251: 'CResourceManager::m_DefaultMeshList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(15): warning C4251: 'CResourceManager::m_DefaultTextureList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(16): warning C4251: 'CResourceManager::m_DefaultRenderStateList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(17): warning C4251: 'CResourceManager::m_DefaultMaterialList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(18): warning C4251: 'CResourceManager::m_MaterialIter': class 'std::_List_iterator<std::_List_val<std::_List_simple_types<_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::pair<const size_t,CMaterial *>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\list(457): note: 'std::_List_iterator<std::_List_val<std::_List_simple_types<_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::pair<const size_t,CMaterial *>
          ]
d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(8): warning C4251: 'CShaderManager::m_mapShader': class 'std::unordered_map<size_t,CShader *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CShader *
          ]
  d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(8): note: 'std::unordered_map<size_t,CShader *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CShader *
          ]
d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(9): warning C4251: 'CShaderManager::m_mapInputLayout': class 'std::unordered_map<size_t,ID3D11InputLayout *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=ID3D11InputLayout *
          ]
  d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(9): note: 'std::unordered_map<size_t,ID3D11InputLayout *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=ID3D11InputLayout *
          ]
d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(10): warning C4251: 'CShaderManager::m_mapCBuffer': class 'std::unordered_map<size_t,PCBuffer,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=PCBuffer
          ]
  d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(10): note: 'std::unordered_map<size_t,PCBuffer,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=PCBuffer
          ]
d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(11): warning C4251: 'CShaderManager::m_vecInputDesc': class 'std::vector<D3D11_INPUT_ELEMENT_DESC,std::allocator<_Ty>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=D3D11_INPUT_ELEMENT_DESC
          ]
  d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(11): note: 'std::vector<D3D11_INPUT_ELEMENT_DESC,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=D3D11_INPUT_ELEMENT_DESC
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(23): warning C4251: 'CColliderBase::m_vecBlockCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(24): warning C4251: 'CColliderBase::m_vecBeginOverlapCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(25): warning C4251: 'CColliderBase::m_vecEndOverlapCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(28): warning C4251: 'CColliderBase::m_CurrentFrameCollision': class 'std::list<CColliderBase *,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CColliderBase *
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(28): note: 'std::list<CColliderBase *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CColliderBase *
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(29): warning C4251: 'CColliderBase::m_CollisionList': class 'std::list<CColliderBase *,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CColliderBase *
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(28): note: 'std::list<CColliderBase *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CColliderBase *
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(30): warning C4251: 'CColliderBase::m_vecSectionIndex': class 'std::vector<unsigned int,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=unsigned int
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(30): note: 'std::vector<unsigned int,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=unsigned int
          ]
d:\mingyu\newdx\gameengine\include\input.h(120): warning C4251: 'CInput::m_tKeyInfo': struct '_tagKeyInfo'에서는 class 'CInput'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  d:\mingyu\newdx\gameengine\include\input.h(28): note: '_tagKeyInfo' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\input.h(122): warning C4251: 'CInput::m_mapAxis': class 'std::unordered_map<size_t,PKeyAxis,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CInput'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=PKeyAxis
          ]
  d:\mingyu\newdx\gameengine\include\input.h(122): note: 'std::unordered_map<size_t,PKeyAxis,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=PKeyAxis
          ]
d:\mingyu\newdx\gameengine\include\input.h(123): warning C4251: 'CInput::m_mapAction': class 'std::unordered_map<size_t,PKeyAction,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CInput'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=PKeyAction
          ]
  d:\mingyu\newdx\gameengine\include\input.h(123): note: 'std::unordered_map<size_t,PKeyAction,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=PKeyAction
          ]
d:\mingyu\newdx\gameengine\include\input.h(124): warning C4251: 'CInput::m_UseKeyList': class 'std::list<unsigned char,std::allocator<_Ty>>'에서는 class 'CInput'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=unsigned char
          ]
  d:\mingyu\newdx\gameengine\include\input.h(124): note: 'std::list<unsigned char,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=unsigned char
          ]
d:\mingyu\newdx\gameengine\include\input.h(137): warning C4251: 'CInput::m_tMouseInfo': struct '_tagKeyInfo'에서는 class 'CInput'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  d:\mingyu\newdx\gameengine\include\input.h(28): note: '_tagKeyInfo' 선언을 참조하십시오.
  UIImage.cpp
d:\mingyu\newdx\gameengine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.17763.0\um\directxmath.h(432): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\ref.h(13): warning C4251: 'CRef::m_strName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CRef'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\component\scenecomponent.h(15): warning C4251: 'CSceneComponent::m_vecChild': class 'std::vector<CSceneComponent *,std::allocator<_Ty>>'에서는 class 'CSceneComponent'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CSceneComponent *
          ]
  d:\mingyu\newdx\gameengine\include\component\scenecomponent.h(15): note: 'std::vector<CSceneComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CSceneComponent *
          ]
d:\mingyu\newdx\gameengine\include\resource\texture.h(14): warning C4251: 'CTexture::m_vecImage': class 'std::vector<DirectX::ScratchImage *,std::allocator<_Ty>>'에서는 class 'CTexture'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=DirectX::ScratchImage *
          ]
  d:\mingyu\newdx\gameengine\include\resource\texture.h(14): note: 'std::vector<DirectX::ScratchImage *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=DirectX::ScratchImage *
          ]
d:\mingyu\newdx\gameengine\include\resource\texture.h(15): warning C4251: 'CTexture::m_vecFileName': class 'std::vector<const TCHAR *,std::allocator<_Ty>>'에서는 class 'CTexture'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=const TCHAR *
          ]
  d:\mingyu\newdx\gameengine\include\resource\texture.h(15): note: 'std::vector<const TCHAR *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=const TCHAR *
          ]
d:\mingyu\newdx\gameengine\include\resource\texture.h(16): warning C4251: 'CTexture::m_strPathName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CTexture'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(8): warning C4251: 'CResourceManager::m_mapMesh': class 'std::unordered_map<size_t,CMesh *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CMesh *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(8): note: 'std::unordered_map<size_t,CMesh *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CMesh *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(9): warning C4251: 'CResourceManager::m_mapTexture': class 'std::unordered_map<size_t,CTexture *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CTexture *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(9): note: 'std::unordered_map<size_t,CTexture *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CTexture *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(10): warning C4251: 'CResourceManager::m_mapMaterial': class 'std::unordered_map<size_t,CMaterial *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CMaterial *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(10): note: 'std::unordered_map<size_t,CMaterial *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CMaterial *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(11): warning C4251: 'CResourceManager::m_mapSampler': class 'std::unordered_map<size_t,ID3D11SamplerState *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=ID3D11SamplerState *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(11): note: 'std::unordered_map<size_t,ID3D11SamplerState *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=ID3D11SamplerState *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(12): warning C4251: 'CResourceManager::m_mapRenderState': class 'std::unordered_map<size_t,CRenderState *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CRenderState *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(12): note: 'std::unordered_map<size_t,CRenderState *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CRenderState *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(13): warning C4251: 'CResourceManager::m_mapAnim2DSequence': class 'std::unordered_map<size_t,CAnimation2DSequence *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CAnimation2DSequence *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(13): note: 'std::unordered_map<size_t,CAnimation2DSequence *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CAnimation2DSequence *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): warning C4251: 'CResourceManager::m_DefaultMeshList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(15): warning C4251: 'CResourceManager::m_DefaultTextureList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(16): warning C4251: 'CResourceManager::m_DefaultRenderStateList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(17): warning C4251: 'CResourceManager::m_DefaultMaterialList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(18): warning C4251: 'CResourceManager::m_MaterialIter': class 'std::_List_iterator<std::_List_val<std::_List_simple_types<_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::pair<const size_t,CMaterial *>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\list(457): note: 'std::_List_iterator<std::_List_val<std::_List_simple_types<_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::pair<const size_t,CMaterial *>
          ]
d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(8): warning C4251: 'CShaderManager::m_mapShader': class 'std::unordered_map<size_t,CShader *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CShader *
          ]
  d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(8): note: 'std::unordered_map<size_t,CShader *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CShader *
          ]
d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(9): warning C4251: 'CShaderManager::m_mapInputLayout': class 'std::unordered_map<size_t,ID3D11InputLayout *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=ID3D11InputLayout *
          ]
  d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(9): note: 'std::unordered_map<size_t,ID3D11InputLayout *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=ID3D11InputLayout *
          ]
d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(10): warning C4251: 'CShaderManager::m_mapCBuffer': class 'std::unordered_map<size_t,PCBuffer,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=PCBuffer
          ]
  d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(10): note: 'std::unordered_map<size_t,PCBuffer,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=PCBuffer
          ]
d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(11): warning C4251: 'CShaderManager::m_vecInputDesc': class 'std::vector<D3D11_INPUT_ELEMENT_DESC,std::allocator<_Ty>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=D3D11_INPUT_ELEMENT_DESC
          ]
  d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(11): note: 'std::vector<D3D11_INPUT_ELEMENT_DESC,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=D3D11_INPUT_ELEMENT_DESC
          ]
  Device.cpp
d:\mingyu\newdx\gameengine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.17763.0\um\directxmath.h(432): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\device.cpp(150): warning C4244: '=': 'int'에서 'FLOAT'(으)로 변환하면서 데이터가 손실될 수 있습니다.
d:\mingyu\newdx\gameengine\include\device.cpp(151): warning C4244: '=': 'int'에서 'FLOAT'(으)로 변환하면서 데이터가 손실될 수 있습니다.
  Engine.cpp
d:\mingyu\newdx\gameengine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.17763.0\um\directxmath.h(432): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\timermanager.h(8): warning C4251: 'CTimerManager::m_mapTimer': class 'std::unordered_map<size_t,CTimer *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CTimerManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CTimer *
          ]
  d:\mingyu\newdx\gameengine\include\timermanager.h(8): note: 'std::unordered_map<size_t,CTimer *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CTimer *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(8): warning C4251: 'CResourceManager::m_mapMesh': class 'std::unordered_map<size_t,CMesh *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CMesh *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(8): note: 'std::unordered_map<size_t,CMesh *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CMesh *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(9): warning C4251: 'CResourceManager::m_mapTexture': class 'std::unordered_map<size_t,CTexture *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CTexture *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(9): note: 'std::unordered_map<size_t,CTexture *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CTexture *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(10): warning C4251: 'CResourceManager::m_mapMaterial': class 'std::unordered_map<size_t,CMaterial *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CMaterial *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(10): note: 'std::unordered_map<size_t,CMaterial *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CMaterial *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(11): warning C4251: 'CResourceManager::m_mapSampler': class 'std::unordered_map<size_t,ID3D11SamplerState *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=ID3D11SamplerState *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(11): note: 'std::unordered_map<size_t,ID3D11SamplerState *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=ID3D11SamplerState *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(12): warning C4251: 'CResourceManager::m_mapRenderState': class 'std::unordered_map<size_t,CRenderState *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CRenderState *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(12): note: 'std::unordered_map<size_t,CRenderState *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CRenderState *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(13): warning C4251: 'CResourceManager::m_mapAnim2DSequence': class 'std::unordered_map<size_t,CAnimation2DSequence *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CAnimation2DSequence *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(13): note: 'std::unordered_map<size_t,CAnimation2DSequence *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CAnimation2DSequence *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): warning C4251: 'CResourceManager::m_DefaultMeshList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(15): warning C4251: 'CResourceManager::m_DefaultTextureList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(16): warning C4251: 'CResourceManager::m_DefaultRenderStateList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(17): warning C4251: 'CResourceManager::m_DefaultMaterialList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(18): warning C4251: 'CResourceManager::m_MaterialIter': class 'std::_List_iterator<std::_List_val<std::_List_simple_types<_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::pair<const size_t,CMaterial *>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\list(457): note: 'std::_List_iterator<std::_List_val<std::_List_simple_types<_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::pair<const size_t,CMaterial *>
          ]
d:\mingyu\newdx\gameengine\include\pathmanager.h(10): warning C4251: 'CPathManager::m_mapPath': class 'std::unordered_map<size_t,TCHAR *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CPathManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=TCHAR *
          ]
  d:\mingyu\newdx\gameengine\include\pathmanager.h(10): note: 'std::unordered_map<size_t,TCHAR *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=TCHAR *
          ]
d:\mingyu\newdx\gameengine\include\input.h(120): warning C4251: 'CInput::m_tKeyInfo': struct '_tagKeyInfo'에서는 class 'CInput'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  d:\mingyu\newdx\gameengine\include\input.h(28): note: '_tagKeyInfo' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\input.h(122): warning C4251: 'CInput::m_mapAxis': class 'std::unordered_map<size_t,PKeyAxis,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CInput'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=PKeyAxis
          ]
  d:\mingyu\newdx\gameengine\include\input.h(122): note: 'std::unordered_map<size_t,PKeyAxis,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=PKeyAxis
          ]
d:\mingyu\newdx\gameengine\include\input.h(123): warning C4251: 'CInput::m_mapAction': class 'std::unordered_map<size_t,PKeyAction,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CInput'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=PKeyAction
          ]
  d:\mingyu\newdx\gameengine\include\input.h(123): note: 'std::unordered_map<size_t,PKeyAction,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=PKeyAction
          ]
d:\mingyu\newdx\gameengine\include\input.h(124): warning C4251: 'CInput::m_UseKeyList': class 'std::list<unsigned char,std::allocator<_Ty>>'에서는 class 'CInput'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=unsigned char
          ]
  d:\mingyu\newdx\gameengine\include\input.h(124): note: 'std::list<unsigned char,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=unsigned char
          ]
d:\mingyu\newdx\gameengine\include\input.h(137): warning C4251: 'CInput::m_tMouseInfo': struct '_tagKeyInfo'에서는 class 'CInput'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  d:\mingyu\newdx\gameengine\include\input.h(28): note: '_tagKeyInfo' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\scheduler.h(7): warning C4251: '_tagScheduleInfo::strName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 struct '_tagScheduleInfo'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\scheduler.h(11): warning C4251: '_tagScheduleInfo::func': class 'std::function<void (void)>'에서는 struct '_tagScheduleInfo'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  d:\mingyu\newdx\gameengine\include\scheduler.h(11): note: 'std::function<void (void)>' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\scheduler.h(24): warning C4251: 'CScheduler::m_ScheduleList': class 'std::list<_tagScheduleInfo *,std::allocator<_Ty>>'에서는 class 'CScheduler'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=_tagScheduleInfo *
          ]
  d:\mingyu\newdx\gameengine\include\scheduler.h(24): note: 'std::list<_tagScheduleInfo *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=_tagScheduleInfo *
          ]
d:\mingyu\newdx\gameengine\include\collisionmanager.h(18): warning C4251: 'CCollisionManager::m_ChannelList': class 'std::list<PCollisionChannel,std::allocator<_Ty>>'에서는 class 'CCollisionManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=PCollisionChannel
          ]
  d:\mingyu\newdx\gameengine\include\collisionmanager.h(18): note: 'std::list<PCollisionChannel,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=PCollisionChannel
          ]
d:\mingyu\newdx\gameengine\include\collisionmanager.h(19): warning C4251: 'CCollisionManager::m_mapProfile': class 'std::unordered_map<size_t,PCollisionProfile,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CCollisionManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=PCollisionProfile
          ]
  d:\mingyu\newdx\gameengine\include\collisionmanager.h(19): note: 'std::unordered_map<size_t,PCollisionProfile,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=PCollisionProfile
          ]
d:\mingyu\newdx\gameengine\include\collisionmanager.h(20): warning C4251: 'CCollisionManager::m_ColliderList': class 'std::list<CColliderBase *,std::allocator<_Ty>>'에서는 class 'CCollisionManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CColliderBase *
          ]
  d:\mingyu\newdx\gameengine\include\collisionmanager.h(20): note: 'std::list<CColliderBase *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CColliderBase *
          ]
d:\mingyu\newdx\gameengine\include\render\rendermanager.h(17): warning C4251: 'CRenderManager::m_vecRender': class 'std::vector<CSceneComponent *,std::allocator<_Ty>>'에서는 class 'CRenderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CSceneComponent *
          ]
  d:\mingyu\newdx\gameengine\include\render\rendermanager.h(9): note: 'std::vector<CSceneComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CSceneComponent *
          ]
d:\mingyu\newdx\gameengine\include\render\rendermanager.h(22): warning C4251: 'CRenderManager::m_vecInstancing': class 'std::vector<InstancingList,std::allocator<_Ty>>'에서는 class 'CRenderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=InstancingList
          ]
  d:\mingyu\newdx\gameengine\include\render\rendermanager.h(22): note: 'std::vector<InstancingList,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=InstancingList
          ]
d:\mingyu\newdx\gameengine\include\render\rendermanager.h(23): warning C4251: 'CRenderManager::m_vecStaticData': class 'std::vector<PStaticInstancingData,std::allocator<_Ty>>'에서는 class 'CRenderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=PStaticInstancingData
          ]
  d:\mingyu\newdx\gameengine\include\render\rendermanager.h(23): note: 'std::vector<PStaticInstancingData,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=PStaticInstancingData
          ]
d:\mingyu\newdx\gameengine\include\render\rendermanager.h(25): warning C4251: 'CRenderManager::m_vecAnim2DInstancing': class 'std::vector<InstancingList,std::allocator<_Ty>>'에서는 class 'CRenderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=InstancingList
          ]
  d:\mingyu\newdx\gameengine\include\render\rendermanager.h(22): note: 'std::vector<InstancingList,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=InstancingList
          ]
d:\mingyu\newdx\gameengine\include\render\rendermanager.h(27): warning C4251: 'CRenderManager::m_vecAnim2DData': class 'std::vector<PAnim2DInstancingData,std::allocator<_Ty>>'에서는 class 'CRenderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=PAnim2DInstancingData
          ]
  d:\mingyu\newdx\gameengine\include\render\rendermanager.h(27): note: 'std::vector<PAnim2DInstancingData,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=PAnim2DInstancingData
          ]
  ExcelManager.cpp
d:\mingyu\newdx\gameengine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.17763.0\um\directxmath.h(432): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
  Input.cpp
d:\mingyu\newdx\gameengine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.17763.0\um\directxmath.h(432): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\input.h(120): warning C4251: 'CInput::m_tKeyInfo': struct '_tagKeyInfo'에서는 class 'CInput'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  d:\mingyu\newdx\gameengine\include\input.h(28): note: '_tagKeyInfo' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\input.h(122): warning C4251: 'CInput::m_mapAxis': class 'std::unordered_map<size_t,PKeyAxis,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CInput'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=PKeyAxis
          ]
  d:\mingyu\newdx\gameengine\include\input.h(122): note: 'std::unordered_map<size_t,PKeyAxis,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=PKeyAxis
          ]
d:\mingyu\newdx\gameengine\include\input.h(123): warning C4251: 'CInput::m_mapAction': class 'std::unordered_map<size_t,PKeyAction,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CInput'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=PKeyAction
          ]
  d:\mingyu\newdx\gameengine\include\input.h(123): note: 'std::unordered_map<size_t,PKeyAction,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=PKeyAction
          ]
d:\mingyu\newdx\gameengine\include\input.h(124): warning C4251: 'CInput::m_UseKeyList': class 'std::list<unsigned char,std::allocator<_Ty>>'에서는 class 'CInput'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=unsigned char
          ]
  d:\mingyu\newdx\gameengine\include\input.h(124): note: 'std::list<unsigned char,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=unsigned char
          ]
d:\mingyu\newdx\gameengine\include\input.h(137): warning C4251: 'CInput::m_tMouseInfo': struct '_tagKeyInfo'에서는 class 'CInput'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  d:\mingyu\newdx\gameengine\include\input.h(28): note: '_tagKeyInfo' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\ref.h(13): warning C4251: 'CRef::m_strName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CRef'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\resource\mesh.h(22): warning C4251: 'CMesh::m_vecMeshContainer': class 'std::vector<PMeshContainer,std::allocator<_Ty>>'에서는 class 'CMesh'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=PMeshContainer
          ]
  d:\mingyu\newdx\gameengine\include\resource\mesh.h(22): note: 'std::vector<PMeshContainer,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=PMeshContainer
          ]
d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(8): warning C4251: 'CShaderManager::m_mapShader': class 'std::unordered_map<size_t,CShader *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CShader *
          ]
  d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(8): note: 'std::unordered_map<size_t,CShader *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CShader *
          ]
d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(9): warning C4251: 'CShaderManager::m_mapInputLayout': class 'std::unordered_map<size_t,ID3D11InputLayout *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=ID3D11InputLayout *
          ]
  d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(9): note: 'std::unordered_map<size_t,ID3D11InputLayout *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=ID3D11InputLayout *
          ]
d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(10): warning C4251: 'CShaderManager::m_mapCBuffer': class 'std::unordered_map<size_t,PCBuffer,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=PCBuffer
          ]
  d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(10): note: 'std::unordered_map<size_t,PCBuffer,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=PCBuffer
          ]
d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(11): warning C4251: 'CShaderManager::m_vecInputDesc': class 'std::vector<D3D11_INPUT_ELEMENT_DESC,std::allocator<_Ty>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=D3D11_INPUT_ELEMENT_DESC
          ]
  d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(11): note: 'std::vector<D3D11_INPUT_ELEMENT_DESC,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=D3D11_INPUT_ELEMENT_DESC
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(8): warning C4251: 'CResourceManager::m_mapMesh': class 'std::unordered_map<size_t,CMesh *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CMesh *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(8): note: 'std::unordered_map<size_t,CMesh *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CMesh *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(9): warning C4251: 'CResourceManager::m_mapTexture': class 'std::unordered_map<size_t,CTexture *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CTexture *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(9): note: 'std::unordered_map<size_t,CTexture *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CTexture *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(10): warning C4251: 'CResourceManager::m_mapMaterial': class 'std::unordered_map<size_t,CMaterial *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CMaterial *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(10): note: 'std::unordered_map<size_t,CMaterial *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CMaterial *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(11): warning C4251: 'CResourceManager::m_mapSampler': class 'std::unordered_map<size_t,ID3D11SamplerState *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=ID3D11SamplerState *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(11): note: 'std::unordered_map<size_t,ID3D11SamplerState *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=ID3D11SamplerState *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(12): warning C4251: 'CResourceManager::m_mapRenderState': class 'std::unordered_map<size_t,CRenderState *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CRenderState *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(12): note: 'std::unordered_map<size_t,CRenderState *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CRenderState *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(13): warning C4251: 'CResourceManager::m_mapAnim2DSequence': class 'std::unordered_map<size_t,CAnimation2DSequence *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CAnimation2DSequence *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(13): note: 'std::unordered_map<size_t,CAnimation2DSequence *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CAnimation2DSequence *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): warning C4251: 'CResourceManager::m_DefaultMeshList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(15): warning C4251: 'CResourceManager::m_DefaultTextureList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(16): warning C4251: 'CResourceManager::m_DefaultRenderStateList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(17): warning C4251: 'CResourceManager::m_DefaultMaterialList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(18): warning C4251: 'CResourceManager::m_MaterialIter': class 'std::_List_iterator<std::_List_val<std::_List_simple_types<_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::pair<const size_t,CMaterial *>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\list(457): note: 'std::_List_iterator<std::_List_val<std::_List_simple_types<_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::pair<const size_t,CMaterial *>
          ]
d:\mingyu\newdx\gameengine\include\resource\texture.h(14): warning C4251: 'CTexture::m_vecImage': class 'std::vector<DirectX::ScratchImage *,std::allocator<_Ty>>'에서는 class 'CTexture'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=DirectX::ScratchImage *
          ]
  d:\mingyu\newdx\gameengine\include\resource\texture.h(14): note: 'std::vector<DirectX::ScratchImage *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=DirectX::ScratchImage *
          ]
d:\mingyu\newdx\gameengine\include\resource\texture.h(15): warning C4251: 'CTexture::m_vecFileName': class 'std::vector<const TCHAR *,std::allocator<_Ty>>'에서는 class 'CTexture'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=const TCHAR *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(40): note: 'std::vector<const TCHAR *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=const TCHAR *
          ]
d:\mingyu\newdx\gameengine\include\resource\texture.h(16): warning C4251: 'CTexture::m_strPathName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CTexture'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\resource\animation2dsequence.h(41): warning C4251: 'CAnimation2DSequence::m_vecTexture': class 'std::vector<CTexture *,std::allocator<_Ty>>'에서는 class 'CAnimation2DSequence'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CTexture *
          ]
  d:\mingyu\newdx\gameengine\include\resource\animation2dsequence.h(41): note: 'std::vector<CTexture *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CTexture *
          ]
d:\mingyu\newdx\gameengine\include\resource\animation2dsequence.h(51): warning C4251: 'CAnimation2DSequence::m_NotifyList': class 'std::list<PAnim2DNotify,std::allocator<_Ty>>'에서는 class 'CAnimation2DSequence'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=PAnim2DNotify
          ]
  d:\mingyu\newdx\gameengine\include\resource\animation2dsequence.h(51): note: 'std::list<PAnim2DNotify,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=PAnim2DNotify
          ]
d:\mingyu\newdx\gameengine\include\resource\animation2dsequence.h(52): warning C4251: 'CAnimation2DSequence::m_vecFrameInfo': class 'std::vector<Animation2DFrameInfo,std::allocator<_Ty>>'에서는 class 'CAnimation2DSequence'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=Animation2DFrameInfo
          ]
  d:\mingyu\newdx\gameengine\include\resource\animation2dsequence.h(52): note: 'std::vector<Animation2DFrameInfo,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=Animation2DFrameInfo
          ]
d:\mingyu\newdx\gameengine\include\resource\animation2dsequence.h(55): warning C4251: 'CAnimation2DSequence::m_strReturnSequence': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CAnimation2DSequence'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\component\animation2d.h(35): warning C4251: 'CAnimation2D::m_mapAnimSequence': class 'std::unordered_map<size_t,CAnimation2DSequence *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CAnimation2D'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CAnimation2DSequence *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(13): note: 'std::unordered_map<size_t,CAnimation2DSequence *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CAnimation2DSequence *
          ]
d:\mingyu\newdx\gameengine\include\component\transform.h(16): warning C4251: 'CTransform::m_vecChild': class 'std::vector<CTransform *,std::allocator<_Ty>>'에서는 class 'CTransform'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CTransform *
          ]
  d:\mingyu\newdx\gameengine\include\component\transform.h(16): note: 'std::vector<CTransform *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CTransform *
          ]
d:\mingyu\newdx\gameengine\include\scene\scene.h(26): warning C4251: 'CScene::m_ObjList': class 'std::list<CGameObject *,std::allocator<_Ty>>'에서는 class 'CScene'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CGameObject *
          ]
  d:\mingyu\newdx\gameengine\include\scene\scene.h(26): note: 'std::list<CGameObject *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CGameObject *
          ]
d:\mingyu\newdx\gameengine\include\scene\scene.h(27): warning C4251: 'CScene::m_BeginList': class 'std::list<CGameObject *,std::allocator<_Ty>>'에서는 class 'CScene'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CGameObject *
          ]
  d:\mingyu\newdx\gameengine\include\scene\scene.h(26): note: 'std::list<CGameObject *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CGameObject *
          ]
d:\mingyu\newdx\gameengine\include\cameramanager.h(14): warning C4251: 'CCameraManager::m_CameraList': class 'std::list<CCameraComponent *,std::allocator<_Ty>>'에서는 class 'CCameraManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CCameraComponent *
          ]
  d:\mingyu\newdx\gameengine\include\cameramanager.h(14): note: 'std::list<CCameraComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CCameraComponent *
          ]
d:\mingyu\newdx\gameengine\include\component\scenecomponent.h(15): warning C4251: 'CSceneComponent::m_vecChild': class 'std::vector<CSceneComponent *,std::allocator<_Ty>>'에서는 class 'CSceneComponent'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CSceneComponent *
          ]
  d:\mingyu\newdx\gameengine\include\component\scenecomponent.h(15): note: 'std::vector<CSceneComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CSceneComponent *
          ]
d:\mingyu\newdx\gameengine\include\input.cpp(270): warning C4267: '인수': 'size_t'에서 'int'(으)로 변환하면서 데이터가 손실될 수 있습니다.
d:\mingyu\newdx\gameengine\include\input.cpp(285): warning C4244: '인수': 'LONG'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
  Matrix.cpp
d:\mingyu\newdx\gameengine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.17763.0\um\directxmath.h(432): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
  GameObject.cpp
d:\mingyu\newdx\gameengine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.17763.0\um\directxmath.h(432): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\ref.h(13): warning C4251: 'CRef::m_strName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CRef'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\component\scenecomponent.h(15): warning C4251: 'CSceneComponent::m_vecChild': class 'std::vector<CSceneComponent *,std::allocator<_Ty>>'에서는 class 'CSceneComponent'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CSceneComponent *
          ]
  d:\mingyu\newdx\gameengine\include\component\scenecomponent.h(15): note: 'std::vector<CSceneComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CSceneComponent *
          ]
d:\mingyu\newdx\gameengine\include\object\gameobject.h(19): warning C4251: 'CGameObject::m_vecObjComponent': class 'std::vector<CObjectComponent *,std::allocator<_Ty>>'에서는 class 'CGameObject'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CObjectComponent *
          ]
  d:\mingyu\newdx\gameengine\include\object\gameobject.h(19): note: 'std::vector<CObjectComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CObjectComponent *
          ]
d:\mingyu\newdx\gameengine\include\object\gameobject.h(20): warning C4251: 'CGameObject::m_vecChild': class 'std::vector<CGameObject *,std::allocator<_Ty>>'에서는 class 'CGameObject'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CGameObject *
          ]
  d:\mingyu\newdx\gameengine\include\object\gameobject.h(20): note: 'std::vector<CGameObject *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CGameObject *
          ]
d:\mingyu\newdx\gameengine\include\object\gameobject.h(22): warning C4251: 'CGameObject::m_BeginList': class 'std::list<CComponent *,std::allocator<_Ty>>'에서는 class 'CGameObject'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CComponent *
          ]
  d:\mingyu\newdx\gameengine\include\object\gameobject.h(22): note: 'std::list<CComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CComponent *
          ]
d:\mingyu\newdx\gameengine\include\component\transform.h(16): warning C4251: 'CTransform::m_vecChild': class 'std::vector<CTransform *,std::allocator<_Ty>>'에서는 class 'CTransform'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CTransform *
          ]
  d:\mingyu\newdx\gameengine\include\component\transform.h(16): note: 'std::vector<CTransform *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CTransform *
          ]
d:\mingyu\newdx\gameengine\include\scene\scene.h(26): warning C4251: 'CScene::m_ObjList': class 'std::list<CGameObject *,std::allocator<_Ty>>'에서는 class 'CScene'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CGameObject *
          ]
  d:\mingyu\newdx\gameengine\include\scene\scene.h(26): note: 'std::list<CGameObject *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CGameObject *
          ]
d:\mingyu\newdx\gameengine\include\scene\scene.h(27): warning C4251: 'CScene::m_BeginList': class 'std::list<CGameObject *,std::allocator<_Ty>>'에서는 class 'CScene'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CGameObject *
          ]
  d:\mingyu\newdx\gameengine\include\scene\scene.h(26): note: 'std::list<CGameObject *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CGameObject *
          ]
d:\mingyu\newdx\gameengine\include\render\rendermanager.h(17): warning C4251: 'CRenderManager::m_vecRender': class 'std::vector<CSceneComponent *,std::allocator<_Ty>>'에서는 class 'CRenderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CSceneComponent *
          ]
  d:\mingyu\newdx\gameengine\include\component\scenecomponent.h(15): note: 'std::vector<CSceneComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CSceneComponent *
          ]
d:\mingyu\newdx\gameengine\include\render\rendermanager.h(22): warning C4251: 'CRenderManager::m_vecInstancing': class 'std::vector<InstancingList,std::allocator<_Ty>>'에서는 class 'CRenderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=InstancingList
          ]
  d:\mingyu\newdx\gameengine\include\render\rendermanager.h(22): note: 'std::vector<InstancingList,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=InstancingList
          ]
d:\mingyu\newdx\gameengine\include\render\rendermanager.h(23): warning C4251: 'CRenderManager::m_vecStaticData': class 'std::vector<PStaticInstancingData,std::allocator<_Ty>>'에서는 class 'CRenderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=PStaticInstancingData
          ]
  d:\mingyu\newdx\gameengine\include\render\rendermanager.h(23): note: 'std::vector<PStaticInstancingData,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=PStaticInstancingData
          ]
d:\mingyu\newdx\gameengine\include\render\rendermanager.h(25): warning C4251: 'CRenderManager::m_vecAnim2DInstancing': class 'std::vector<InstancingList,std::allocator<_Ty>>'에서는 class 'CRenderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=InstancingList
          ]
  d:\mingyu\newdx\gameengine\include\render\rendermanager.h(22): note: 'std::vector<InstancingList,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=InstancingList
          ]
d:\mingyu\newdx\gameengine\include\render\rendermanager.h(27): warning C4251: 'CRenderManager::m_vecAnim2DData': class 'std::vector<PAnim2DInstancingData,std::allocator<_Ty>>'에서는 class 'CRenderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=PAnim2DInstancingData
          ]
  d:\mingyu\newdx\gameengine\include\render\rendermanager.h(27): note: 'std::vector<PAnim2DInstancingData,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=PAnim2DInstancingData
          ]
  PathManager.cpp
d:\mingyu\newdx\gameengine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.17763.0\um\directxmath.h(432): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\pathmanager.h(10): warning C4251: 'CPathManager::m_mapPath': class 'std::unordered_map<size_t,TCHAR *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CPathManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=TCHAR *
          ]
  d:\mingyu\newdx\gameengine\include\pathmanager.h(10): note: 'std::unordered_map<size_t,TCHAR *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=TCHAR *
          ]
  Ref.cpp
d:\mingyu\newdx\gameengine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.17763.0\um\directxmath.h(432): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\ref.h(13): warning C4251: 'CRef::m_strName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CRef'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
  RenderManager.cpp
d:\mingyu\newdx\gameengine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.17763.0\um\directxmath.h(432): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\render\rendermanager.h(17): warning C4251: 'CRenderManager::m_vecRender': class 'std::vector<CSceneComponent *,std::allocator<_Ty>>'에서는 class 'CRenderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CSceneComponent *
          ]
  d:\mingyu\newdx\gameengine\include\render\rendermanager.h(9): note: 'std::vector<CSceneComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CSceneComponent *
          ]
d:\mingyu\newdx\gameengine\include\render\rendermanager.h(22): warning C4251: 'CRenderManager::m_vecInstancing': class 'std::vector<InstancingList,std::allocator<_Ty>>'에서는 class 'CRenderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=InstancingList
          ]
  d:\mingyu\newdx\gameengine\include\render\rendermanager.h(22): note: 'std::vector<InstancingList,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=InstancingList
          ]
d:\mingyu\newdx\gameengine\include\render\rendermanager.h(23): warning C4251: 'CRenderManager::m_vecStaticData': class 'std::vector<PStaticInstancingData,std::allocator<_Ty>>'에서는 class 'CRenderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=PStaticInstancingData
          ]
  d:\mingyu\newdx\gameengine\include\render\rendermanager.h(23): note: 'std::vector<PStaticInstancingData,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=PStaticInstancingData
          ]
d:\mingyu\newdx\gameengine\include\render\rendermanager.h(25): warning C4251: 'CRenderManager::m_vecAnim2DInstancing': class 'std::vector<InstancingList,std::allocator<_Ty>>'에서는 class 'CRenderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=InstancingList
          ]
  d:\mingyu\newdx\gameengine\include\render\rendermanager.h(22): note: 'std::vector<InstancingList,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=InstancingList
          ]
d:\mingyu\newdx\gameengine\include\render\rendermanager.h(27): warning C4251: 'CRenderManager::m_vecAnim2DData': class 'std::vector<PAnim2DInstancingData,std::allocator<_Ty>>'에서는 class 'CRenderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=PAnim2DInstancingData
          ]
  d:\mingyu\newdx\gameengine\include\render\rendermanager.h(27): note: 'std::vector<PAnim2DInstancingData,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=PAnim2DInstancingData
          ]
d:\mingyu\newdx\gameengine\include\ref.h(13): warning C4251: 'CRef::m_strName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CRef'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\component\scenecomponent.h(15): warning C4251: 'CSceneComponent::m_vecChild': class 'std::vector<CSceneComponent *,std::allocator<_Ty>>'에서는 class 'CSceneComponent'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CSceneComponent *
          ]
  d:\mingyu\newdx\gameengine\include\render\rendermanager.h(9): note: 'std::vector<CSceneComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CSceneComponent *
          ]
d:\mingyu\newdx\gameengine\include\component\transform.h(16): warning C4251: 'CTransform::m_vecChild': class 'std::vector<CTransform *,std::allocator<_Ty>>'에서는 class 'CTransform'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CTransform *
          ]
  d:\mingyu\newdx\gameengine\include\component\transform.h(16): note: 'std::vector<CTransform *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CTransform *
          ]
d:\mingyu\newdx\gameengine\include\object\gameobject.h(19): warning C4251: 'CGameObject::m_vecObjComponent': class 'std::vector<CObjectComponent *,std::allocator<_Ty>>'에서는 class 'CGameObject'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CObjectComponent *
          ]
  d:\mingyu\newdx\gameengine\include\object\gameobject.h(19): note: 'std::vector<CObjectComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CObjectComponent *
          ]
d:\mingyu\newdx\gameengine\include\object\gameobject.h(20): warning C4251: 'CGameObject::m_vecChild': class 'std::vector<CGameObject *,std::allocator<_Ty>>'에서는 class 'CGameObject'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CGameObject *
          ]
  d:\mingyu\newdx\gameengine\include\object\gameobject.h(20): note: 'std::vector<CGameObject *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CGameObject *
          ]
d:\mingyu\newdx\gameengine\include\object\gameobject.h(22): warning C4251: 'CGameObject::m_BeginList': class 'std::list<CComponent *,std::allocator<_Ty>>'에서는 class 'CGameObject'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CComponent *
          ]
  d:\mingyu\newdx\gameengine\include\object\gameobject.h(22): note: 'std::list<CComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CComponent *
          ]
d:\mingyu\newdx\gameengine\include\resource\material.h(43): warning C4251: 'CMaterial::m_vecContainer': class 'std::vector<PMaterialContainer,std::allocator<_Ty>>'에서는 class 'CMaterial'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=PMaterialContainer
          ]
  d:\mingyu\newdx\gameengine\include\resource\material.h(43): note: 'std::vector<PMaterialContainer,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=PMaterialContainer
          ]
d:\mingyu\newdx\gameengine\include\resource\material.h(47): warning C4251: 'CMaterial::m_mapCBuffer': class 'std::unordered_map<size_t,PCBufferNode,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CMaterial'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=PCBufferNode
          ]
  d:\mingyu\newdx\gameengine\include\resource\material.h(47): note: 'std::unordered_map<size_t,PCBufferNode,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=PCBufferNode
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(8): warning C4251: 'CResourceManager::m_mapMesh': class 'std::unordered_map<size_t,CMesh *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CMesh *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(8): note: 'std::unordered_map<size_t,CMesh *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CMesh *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(9): warning C4251: 'CResourceManager::m_mapTexture': class 'std::unordered_map<size_t,CTexture *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CTexture *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(9): note: 'std::unordered_map<size_t,CTexture *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CTexture *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(10): warning C4251: 'CResourceManager::m_mapMaterial': class 'std::unordered_map<size_t,CMaterial *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CMaterial *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(10): note: 'std::unordered_map<size_t,CMaterial *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CMaterial *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(11): warning C4251: 'CResourceManager::m_mapSampler': class 'std::unordered_map<size_t,ID3D11SamplerState *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=ID3D11SamplerState *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(11): note: 'std::unordered_map<size_t,ID3D11SamplerState *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=ID3D11SamplerState *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(12): warning C4251: 'CResourceManager::m_mapRenderState': class 'std::unordered_map<size_t,CRenderState *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CRenderState *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(12): note: 'std::unordered_map<size_t,CRenderState *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CRenderState *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(13): warning C4251: 'CResourceManager::m_mapAnim2DSequence': class 'std::unordered_map<size_t,CAnimation2DSequence *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CAnimation2DSequence *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(13): note: 'std::unordered_map<size_t,CAnimation2DSequence *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CAnimation2DSequence *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): warning C4251: 'CResourceManager::m_DefaultMeshList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(15): warning C4251: 'CResourceManager::m_DefaultTextureList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(16): warning C4251: 'CResourceManager::m_DefaultRenderStateList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(17): warning C4251: 'CResourceManager::m_DefaultMaterialList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(18): warning C4251: 'CResourceManager::m_MaterialIter': class 'std::_List_iterator<std::_List_val<std::_List_simple_types<_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::pair<const size_t,CMaterial *>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\list(457): note: 'std::_List_iterator<std::_List_val<std::_List_simple_types<_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::pair<const size_t,CMaterial *>
          ]
d:\mingyu\newdx\gameengine\include\input.h(120): warning C4251: 'CInput::m_tKeyInfo': struct '_tagKeyInfo'에서는 class 'CInput'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  d:\mingyu\newdx\gameengine\include\input.h(28): note: '_tagKeyInfo' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\input.h(122): warning C4251: 'CInput::m_mapAxis': class 'std::unordered_map<size_t,PKeyAxis,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CInput'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=PKeyAxis
          ]
  d:\mingyu\newdx\gameengine\include\input.h(122): note: 'std::unordered_map<size_t,PKeyAxis,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=PKeyAxis
          ]
d:\mingyu\newdx\gameengine\include\input.h(123): warning C4251: 'CInput::m_mapAction': class 'std::unordered_map<size_t,PKeyAction,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CInput'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=PKeyAction
          ]
  d:\mingyu\newdx\gameengine\include\input.h(123): note: 'std::unordered_map<size_t,PKeyAction,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=PKeyAction
          ]
d:\mingyu\newdx\gameengine\include\input.h(124): warning C4251: 'CInput::m_UseKeyList': class 'std::list<unsigned char,std::allocator<_Ty>>'에서는 class 'CInput'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=unsigned char
          ]
  d:\mingyu\newdx\gameengine\include\input.h(124): note: 'std::list<unsigned char,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=unsigned char
          ]
d:\mingyu\newdx\gameengine\include\input.h(137): warning C4251: 'CInput::m_tMouseInfo': struct '_tagKeyInfo'에서는 class 'CInput'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  d:\mingyu\newdx\gameengine\include\input.h(28): note: '_tagKeyInfo' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\component\tilemap.h(32): warning C4251: 'CTileMap::m_vecFrame': class 'std::vector<ImageFrame,std::allocator<_Ty>>'에서는 class 'CTileMap'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=ImageFrame
          ]
  d:\mingyu\newdx\gameengine\include\component\tilemap.h(32): note: 'std::vector<ImageFrame,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=ImageFrame
          ]
d:\mingyu\newdx\gameengine\include\cameramanager.h(14): warning C4251: 'CCameraManager::m_CameraList': class 'std::list<CCameraComponent *,std::allocator<_Ty>>'에서는 class 'CCameraManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CCameraComponent *
          ]
  d:\mingyu\newdx\gameengine\include\cameramanager.h(14): note: 'std::list<CCameraComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CCameraComponent *
          ]
d:\mingyu\newdx\gameengine\include\scene\scene.h(26): warning C4251: 'CScene::m_ObjList': class 'std::list<CGameObject *,std::allocator<_Ty>>'에서는 class 'CScene'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CGameObject *
          ]
  d:\mingyu\newdx\gameengine\include\scene\scene.h(26): note: 'std::list<CGameObject *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CGameObject *
          ]
d:\mingyu\newdx\gameengine\include\scene\scene.h(27): warning C4251: 'CScene::m_BeginList': class 'std::list<CGameObject *,std::allocator<_Ty>>'에서는 class 'CScene'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CGameObject *
          ]
  d:\mingyu\newdx\gameengine\include\scene\scene.h(26): note: 'std::list<CGameObject *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CGameObject *
          ]
d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(8): warning C4251: 'CShaderManager::m_mapShader': class 'std::unordered_map<size_t,CShader *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CShader *
          ]
  d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(8): note: 'std::unordered_map<size_t,CShader *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CShader *
          ]
d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(9): warning C4251: 'CShaderManager::m_mapInputLayout': class 'std::unordered_map<size_t,ID3D11InputLayout *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=ID3D11InputLayout *
          ]
  d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(9): note: 'std::unordered_map<size_t,ID3D11InputLayout *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=ID3D11InputLayout *
          ]
d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(10): warning C4251: 'CShaderManager::m_mapCBuffer': class 'std::unordered_map<size_t,PCBuffer,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=PCBuffer
          ]
  d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(10): note: 'std::unordered_map<size_t,PCBuffer,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=PCBuffer
          ]
d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(11): warning C4251: 'CShaderManager::m_vecInputDesc': class 'std::vector<D3D11_INPUT_ELEMENT_DESC,std::allocator<_Ty>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=D3D11_INPUT_ELEMENT_DESC
          ]
  d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(11): note: 'std::vector<D3D11_INPUT_ELEMENT_DESC,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=D3D11_INPUT_ELEMENT_DESC
          ]
d:\mingyu\newdx\gameengine\include\render\rendermanager.cpp(140): warning C4244: '인수': 'int'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
d:\mingyu\newdx\gameengine\include\render\rendermanager.cpp(185): warning C4267: '=': 'size_t'에서 'int'(으)로 변환하면서 데이터가 손실될 수 있습니다.
d:\mingyu\newdx\gameengine\include\render\rendermanager.cpp(233): warning C4267: '=': 'size_t'에서 'int'(으)로 변환하면서 데이터가 손실될 수 있습니다.
d:\mingyu\newdx\gameengine\include\render\rendermanager.cpp(439): warning C4267: '=': 'size_t'에서 'int'(으)로 변환하면서 데이터가 손실될 수 있습니다.
  Animation2DSequence.cpp
d:\mingyu\newdx\gameengine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.17763.0\um\directxmath.h(432): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\ref.h(13): warning C4251: 'CRef::m_strName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CRef'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\resource\animation2dsequence.h(41): warning C4251: 'CAnimation2DSequence::m_vecTexture': class 'std::vector<CTexture *,std::allocator<_Ty>>'에서는 class 'CAnimation2DSequence'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CTexture *
          ]
  d:\mingyu\newdx\gameengine\include\resource\animation2dsequence.h(41): note: 'std::vector<CTexture *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CTexture *
          ]
d:\mingyu\newdx\gameengine\include\resource\animation2dsequence.h(51): warning C4251: 'CAnimation2DSequence::m_NotifyList': class 'std::list<PAnim2DNotify,std::allocator<_Ty>>'에서는 class 'CAnimation2DSequence'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=PAnim2DNotify
          ]
  d:\mingyu\newdx\gameengine\include\resource\animation2dsequence.h(51): note: 'std::list<PAnim2DNotify,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=PAnim2DNotify
          ]
d:\mingyu\newdx\gameengine\include\resource\animation2dsequence.h(52): warning C4251: 'CAnimation2DSequence::m_vecFrameInfo': class 'std::vector<Animation2DFrameInfo,std::allocator<_Ty>>'에서는 class 'CAnimation2DSequence'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=Animation2DFrameInfo
          ]
  d:\mingyu\newdx\gameengine\include\resource\animation2dsequence.h(52): note: 'std::vector<Animation2DFrameInfo,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=Animation2DFrameInfo
          ]
d:\mingyu\newdx\gameengine\include\resource\animation2dsequence.h(55): warning C4251: 'CAnimation2DSequence::m_strReturnSequence': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CAnimation2DSequence'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(8): warning C4251: 'CResourceManager::m_mapMesh': class 'std::unordered_map<size_t,CMesh *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CMesh *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(8): note: 'std::unordered_map<size_t,CMesh *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CMesh *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(9): warning C4251: 'CResourceManager::m_mapTexture': class 'std::unordered_map<size_t,CTexture *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CTexture *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(9): note: 'std::unordered_map<size_t,CTexture *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CTexture *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(10): warning C4251: 'CResourceManager::m_mapMaterial': class 'std::unordered_map<size_t,CMaterial *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CMaterial *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(10): note: 'std::unordered_map<size_t,CMaterial *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CMaterial *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(11): warning C4251: 'CResourceManager::m_mapSampler': class 'std::unordered_map<size_t,ID3D11SamplerState *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=ID3D11SamplerState *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(11): note: 'std::unordered_map<size_t,ID3D11SamplerState *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=ID3D11SamplerState *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(12): warning C4251: 'CResourceManager::m_mapRenderState': class 'std::unordered_map<size_t,CRenderState *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CRenderState *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(12): note: 'std::unordered_map<size_t,CRenderState *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CRenderState *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(13): warning C4251: 'CResourceManager::m_mapAnim2DSequence': class 'std::unordered_map<size_t,CAnimation2DSequence *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CAnimation2DSequence *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(13): note: 'std::unordered_map<size_t,CAnimation2DSequence *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CAnimation2DSequence *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): warning C4251: 'CResourceManager::m_DefaultMeshList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(15): warning C4251: 'CResourceManager::m_DefaultTextureList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(16): warning C4251: 'CResourceManager::m_DefaultRenderStateList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(17): warning C4251: 'CResourceManager::m_DefaultMaterialList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(18): warning C4251: 'CResourceManager::m_MaterialIter': class 'std::_List_iterator<std::_List_val<std::_List_simple_types<_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::pair<const size_t,CMaterial *>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\list(457): note: 'std::_List_iterator<std::_List_val<std::_List_simple_types<_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::pair<const size_t,CMaterial *>
          ]
d:\mingyu\newdx\gameengine\include\resource\texture.h(14): warning C4251: 'CTexture::m_vecImage': class 'std::vector<DirectX::ScratchImage *,std::allocator<_Ty>>'에서는 class 'CTexture'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=DirectX::ScratchImage *
          ]
  d:\mingyu\newdx\gameengine\include\resource\texture.h(14): note: 'std::vector<DirectX::ScratchImage *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=DirectX::ScratchImage *
          ]
d:\mingyu\newdx\gameengine\include\resource\texture.h(15): warning C4251: 'CTexture::m_vecFileName': class 'std::vector<const TCHAR *,std::allocator<_Ty>>'에서는 class 'CTexture'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=const TCHAR *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(40): note: 'std::vector<const TCHAR *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=const TCHAR *
          ]
d:\mingyu\newdx\gameengine\include\resource\texture.h(16): warning C4251: 'CTexture::m_strPathName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CTexture'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\resource\material.h(43): warning C4251: 'CMaterial::m_vecContainer': class 'std::vector<PMaterialContainer,std::allocator<_Ty>>'에서는 class 'CMaterial'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=PMaterialContainer
          ]
  d:\mingyu\newdx\gameengine\include\resource\material.h(43): note: 'std::vector<PMaterialContainer,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=PMaterialContainer
          ]
d:\mingyu\newdx\gameengine\include\resource\material.h(47): warning C4251: 'CMaterial::m_mapCBuffer': class 'std::unordered_map<size_t,PCBufferNode,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CMaterial'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=PCBufferNode
          ]
  d:\mingyu\newdx\gameengine\include\resource\material.h(47): note: 'std::unordered_map<size_t,PCBufferNode,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=PCBufferNode
          ]
d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(8): warning C4251: 'CShaderManager::m_mapShader': class 'std::unordered_map<size_t,CShader *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CShader *
          ]
  d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(8): note: 'std::unordered_map<size_t,CShader *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CShader *
          ]
d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(9): warning C4251: 'CShaderManager::m_mapInputLayout': class 'std::unordered_map<size_t,ID3D11InputLayout *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=ID3D11InputLayout *
          ]
  d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(9): note: 'std::unordered_map<size_t,ID3D11InputLayout *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=ID3D11InputLayout *
          ]
d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(10): warning C4251: 'CShaderManager::m_mapCBuffer': class 'std::unordered_map<size_t,PCBuffer,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=PCBuffer
          ]
  d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(10): note: 'std::unordered_map<size_t,PCBuffer,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=PCBuffer
          ]
d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(11): warning C4251: 'CShaderManager::m_vecInputDesc': class 'std::vector<D3D11_INPUT_ELEMENT_DESC,std::allocator<_Ty>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=D3D11_INPUT_ELEMENT_DESC
          ]
  d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(11): note: 'std::vector<D3D11_INPUT_ELEMENT_DESC,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=D3D11_INPUT_ELEMENT_DESC
          ]
d:\mingyu\newdx\gameengine\include\resource\animation2dsequence.cpp(216): warning C4244: '=': 'float'에서 'int'(으)로 변환하면서 데이터가 손실될 수 있습니다.
d:\mingyu\newdx\gameengine\include\resource\animation2dsequence.cpp(253): warning C4267: '=': 'size_t'에서 'int'(으)로 변환하면서 데이터가 손실될 수 있습니다.
d:\mingyu\newdx\gameengine\include\resource\animation2dsequence.cpp(295): warning C4244: '=': 'unsigned int'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
d:\mingyu\newdx\gameengine\include\resource\animation2dsequence.cpp(296): warning C4244: '=': 'unsigned int'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
  AnimationMesh.cpp
d:\mingyu\newdx\gameengine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.17763.0\um\directxmath.h(432): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\ref.h(13): warning C4251: 'CRef::m_strName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CRef'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\resource\mesh.h(22): warning C4251: 'CMesh::m_vecMeshContainer': class 'std::vector<PMeshContainer,std::allocator<_Ty>>'에서는 class 'CMesh'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=PMeshContainer
          ]
  d:\mingyu\newdx\gameengine\include\resource\mesh.h(22): note: 'std::vector<PMeshContainer,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=PMeshContainer
          ]
  BlendState.cpp
d:\mingyu\newdx\gameengine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.17763.0\um\directxmath.h(432): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\ref.h(13): warning C4251: 'CRef::m_strName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CRef'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\resource\blendstate.h(15): warning C4251: 'CBlendState::m_vecDesc': class 'std::vector<D3D11_RENDER_TARGET_BLEND_DESC,std::allocator<_Ty>>'에서는 class 'CBlendState'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=D3D11_RENDER_TARGET_BLEND_DESC
          ]
  d:\mingyu\newdx\gameengine\include\resource\blendstate.h(15): note: 'std::vector<D3D11_RENDER_TARGET_BLEND_DESC,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=D3D11_RENDER_TARGET_BLEND_DESC
          ]
  DepthStencilState.cpp
d:\mingyu\newdx\gameengine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.17763.0\um\directxmath.h(432): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\ref.h(13): warning C4251: 'CRef::m_strName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CRef'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
  코드를 생성하고 있습니다...
  컴파일하고 있습니다...
  Material.cpp
d:\mingyu\newdx\gameengine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.17763.0\um\directxmath.h(432): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\ref.h(13): warning C4251: 'CRef::m_strName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CRef'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\resource\material.h(43): warning C4251: 'CMaterial::m_vecContainer': class 'std::vector<PMaterialContainer,std::allocator<_Ty>>'에서는 class 'CMaterial'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=PMaterialContainer
          ]
  d:\mingyu\newdx\gameengine\include\resource\material.h(43): note: 'std::vector<PMaterialContainer,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=PMaterialContainer
          ]
d:\mingyu\newdx\gameengine\include\resource\material.h(47): warning C4251: 'CMaterial::m_mapCBuffer': class 'std::unordered_map<size_t,PCBufferNode,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CMaterial'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=PCBufferNode
          ]
  d:\mingyu\newdx\gameengine\include\resource\material.h(47): note: 'std::unordered_map<size_t,PCBufferNode,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=PCBufferNode
          ]
d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(8): warning C4251: 'CShaderManager::m_mapShader': class 'std::unordered_map<size_t,CShader *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CShader *
          ]
  d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(8): note: 'std::unordered_map<size_t,CShader *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CShader *
          ]
d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(9): warning C4251: 'CShaderManager::m_mapInputLayout': class 'std::unordered_map<size_t,ID3D11InputLayout *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=ID3D11InputLayout *
          ]
  d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(9): note: 'std::unordered_map<size_t,ID3D11InputLayout *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=ID3D11InputLayout *
          ]
d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(10): warning C4251: 'CShaderManager::m_mapCBuffer': class 'std::unordered_map<size_t,PCBuffer,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=PCBuffer
          ]
  d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(10): note: 'std::unordered_map<size_t,PCBuffer,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=PCBuffer
          ]
d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(11): warning C4251: 'CShaderManager::m_vecInputDesc': class 'std::vector<D3D11_INPUT_ELEMENT_DESC,std::allocator<_Ty>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=D3D11_INPUT_ELEMENT_DESC
          ]
  d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(11): note: 'std::vector<D3D11_INPUT_ELEMENT_DESC,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=D3D11_INPUT_ELEMENT_DESC
          ]
d:\mingyu\newdx\gameengine\include\resource\texture.h(14): warning C4251: 'CTexture::m_vecImage': class 'std::vector<DirectX::ScratchImage *,std::allocator<_Ty>>'에서는 class 'CTexture'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=DirectX::ScratchImage *
          ]
  d:\mingyu\newdx\gameengine\include\resource\texture.h(14): note: 'std::vector<DirectX::ScratchImage *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=DirectX::ScratchImage *
          ]
d:\mingyu\newdx\gameengine\include\resource\texture.h(15): warning C4251: 'CTexture::m_vecFileName': class 'std::vector<const TCHAR *,std::allocator<_Ty>>'에서는 class 'CTexture'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=const TCHAR *
          ]
  d:\mingyu\newdx\gameengine\include\resource\material.h(78): note: 'std::vector<const TCHAR *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=const TCHAR *
          ]
d:\mingyu\newdx\gameengine\include\resource\texture.h(16): warning C4251: 'CTexture::m_strPathName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CTexture'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(8): warning C4251: 'CResourceManager::m_mapMesh': class 'std::unordered_map<size_t,CMesh *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CMesh *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(8): note: 'std::unordered_map<size_t,CMesh *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CMesh *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(9): warning C4251: 'CResourceManager::m_mapTexture': class 'std::unordered_map<size_t,CTexture *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CTexture *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(9): note: 'std::unordered_map<size_t,CTexture *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CTexture *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(10): warning C4251: 'CResourceManager::m_mapMaterial': class 'std::unordered_map<size_t,CMaterial *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CMaterial *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(10): note: 'std::unordered_map<size_t,CMaterial *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CMaterial *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(11): warning C4251: 'CResourceManager::m_mapSampler': class 'std::unordered_map<size_t,ID3D11SamplerState *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=ID3D11SamplerState *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(11): note: 'std::unordered_map<size_t,ID3D11SamplerState *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=ID3D11SamplerState *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(12): warning C4251: 'CResourceManager::m_mapRenderState': class 'std::unordered_map<size_t,CRenderState *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CRenderState *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(12): note: 'std::unordered_map<size_t,CRenderState *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CRenderState *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(13): warning C4251: 'CResourceManager::m_mapAnim2DSequence': class 'std::unordered_map<size_t,CAnimation2DSequence *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CAnimation2DSequence *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(13): note: 'std::unordered_map<size_t,CAnimation2DSequence *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CAnimation2DSequence *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): warning C4251: 'CResourceManager::m_DefaultMeshList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(15): warning C4251: 'CResourceManager::m_DefaultTextureList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(16): warning C4251: 'CResourceManager::m_DefaultRenderStateList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(17): warning C4251: 'CResourceManager::m_DefaultMaterialList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(18): warning C4251: 'CResourceManager::m_MaterialIter': class 'std::_List_iterator<std::_List_val<std::_List_simple_types<_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::pair<const size_t,CMaterial *>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\list(457): note: 'std::_List_iterator<std::_List_val<std::_List_simple_types<_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::pair<const size_t,CMaterial *>
          ]
  Mesh.cpp
d:\mingyu\newdx\gameengine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.17763.0\um\directxmath.h(432): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\ref.h(13): warning C4251: 'CRef::m_strName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CRef'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\resource\mesh.h(22): warning C4251: 'CMesh::m_vecMeshContainer': class 'std::vector<PMeshContainer,std::allocator<_Ty>>'에서는 class 'CMesh'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=PMeshContainer
          ]
  d:\mingyu\newdx\gameengine\include\resource\mesh.h(22): note: 'std::vector<PMeshContainer,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=PMeshContainer
          ]
d:\mingyu\newdx\gameengine\include\resource\material.h(43): warning C4251: 'CMaterial::m_vecContainer': class 'std::vector<PMaterialContainer,std::allocator<_Ty>>'에서는 class 'CMaterial'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=PMaterialContainer
          ]
  d:\mingyu\newdx\gameengine\include\resource\material.h(43): note: 'std::vector<PMaterialContainer,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=PMaterialContainer
          ]
d:\mingyu\newdx\gameengine\include\resource\material.h(47): warning C4251: 'CMaterial::m_mapCBuffer': class 'std::unordered_map<size_t,PCBufferNode,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CMaterial'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=PCBufferNode
          ]
  d:\mingyu\newdx\gameengine\include\resource\material.h(47): note: 'std::unordered_map<size_t,PCBufferNode,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=PCBufferNode
          ]
d:\mingyu\newdx\gameengine\include\resource\mesh.cpp(181): warning C4838: 'int'에서 'UINT'(으)로의 변환에는 축소 변환이 필요합니다.
d:\mingyu\newdx\gameengine\include\resource\mesh.cpp(217): warning C4838: 'int'에서 'UINT'(으)로의 변환에는 축소 변환이 필요합니다.
  RasterizerState.cpp
d:\mingyu\newdx\gameengine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.17763.0\um\directxmath.h(432): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\ref.h(13): warning C4251: 'CRef::m_strName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CRef'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
  RenderState.cpp
d:\mingyu\newdx\gameengine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.17763.0\um\directxmath.h(432): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\ref.h(13): warning C4251: 'CRef::m_strName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CRef'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
  ResourceManager.cpp
d:\mingyu\newdx\gameengine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.17763.0\um\directxmath.h(432): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(8): warning C4251: 'CResourceManager::m_mapMesh': class 'std::unordered_map<size_t,CMesh *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CMesh *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(8): note: 'std::unordered_map<size_t,CMesh *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CMesh *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(9): warning C4251: 'CResourceManager::m_mapTexture': class 'std::unordered_map<size_t,CTexture *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CTexture *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(9): note: 'std::unordered_map<size_t,CTexture *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CTexture *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(10): warning C4251: 'CResourceManager::m_mapMaterial': class 'std::unordered_map<size_t,CMaterial *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CMaterial *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(10): note: 'std::unordered_map<size_t,CMaterial *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CMaterial *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(11): warning C4251: 'CResourceManager::m_mapSampler': class 'std::unordered_map<size_t,ID3D11SamplerState *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=ID3D11SamplerState *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(11): note: 'std::unordered_map<size_t,ID3D11SamplerState *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=ID3D11SamplerState *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(12): warning C4251: 'CResourceManager::m_mapRenderState': class 'std::unordered_map<size_t,CRenderState *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CRenderState *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(12): note: 'std::unordered_map<size_t,CRenderState *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CRenderState *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(13): warning C4251: 'CResourceManager::m_mapAnim2DSequence': class 'std::unordered_map<size_t,CAnimation2DSequence *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CAnimation2DSequence *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(13): note: 'std::unordered_map<size_t,CAnimation2DSequence *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CAnimation2DSequence *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): warning C4251: 'CResourceManager::m_DefaultMeshList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(15): warning C4251: 'CResourceManager::m_DefaultTextureList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(16): warning C4251: 'CResourceManager::m_DefaultRenderStateList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(17): warning C4251: 'CResourceManager::m_DefaultMaterialList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(18): warning C4251: 'CResourceManager::m_MaterialIter': class 'std::_List_iterator<std::_List_val<std::_List_simple_types<_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::pair<const size_t,CMaterial *>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\list(457): note: 'std::_List_iterator<std::_List_val<std::_List_simple_types<_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::pair<const size_t,CMaterial *>
          ]
d:\mingyu\newdx\gameengine\include\ref.h(13): warning C4251: 'CRef::m_strName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CRef'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\resource\mesh.h(22): warning C4251: 'CMesh::m_vecMeshContainer': class 'std::vector<PMeshContainer,std::allocator<_Ty>>'에서는 class 'CMesh'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=PMeshContainer
          ]
  d:\mingyu\newdx\gameengine\include\resource\mesh.h(22): note: 'std::vector<PMeshContainer,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=PMeshContainer
          ]
d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(8): warning C4251: 'CShaderManager::m_mapShader': class 'std::unordered_map<size_t,CShader *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CShader *
          ]
  d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(8): note: 'std::unordered_map<size_t,CShader *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CShader *
          ]
d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(9): warning C4251: 'CShaderManager::m_mapInputLayout': class 'std::unordered_map<size_t,ID3D11InputLayout *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=ID3D11InputLayout *
          ]
  d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(9): note: 'std::unordered_map<size_t,ID3D11InputLayout *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=ID3D11InputLayout *
          ]
d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(10): warning C4251: 'CShaderManager::m_mapCBuffer': class 'std::unordered_map<size_t,PCBuffer,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=PCBuffer
          ]
  d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(10): note: 'std::unordered_map<size_t,PCBuffer,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=PCBuffer
          ]
d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(11): warning C4251: 'CShaderManager::m_vecInputDesc': class 'std::vector<D3D11_INPUT_ELEMENT_DESC,std::allocator<_Ty>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=D3D11_INPUT_ELEMENT_DESC
          ]
  d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(11): note: 'std::vector<D3D11_INPUT_ELEMENT_DESC,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=D3D11_INPUT_ELEMENT_DESC
          ]
d:\mingyu\newdx\gameengine\include\resource\texture.h(14): warning C4251: 'CTexture::m_vecImage': class 'std::vector<DirectX::ScratchImage *,std::allocator<_Ty>>'에서는 class 'CTexture'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=DirectX::ScratchImage *
          ]
  d:\mingyu\newdx\gameengine\include\resource\texture.h(14): note: 'std::vector<DirectX::ScratchImage *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=DirectX::ScratchImage *
          ]
d:\mingyu\newdx\gameengine\include\resource\texture.h(15): warning C4251: 'CTexture::m_vecFileName': class 'std::vector<const TCHAR *,std::allocator<_Ty>>'에서는 class 'CTexture'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=const TCHAR *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(40): note: 'std::vector<const TCHAR *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=const TCHAR *
          ]
d:\mingyu\newdx\gameengine\include\resource\texture.h(16): warning C4251: 'CTexture::m_strPathName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CTexture'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\resource\material.h(43): warning C4251: 'CMaterial::m_vecContainer': class 'std::vector<PMaterialContainer,std::allocator<_Ty>>'에서는 class 'CMaterial'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=PMaterialContainer
          ]
  d:\mingyu\newdx\gameengine\include\resource\material.h(43): note: 'std::vector<PMaterialContainer,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=PMaterialContainer
          ]
d:\mingyu\newdx\gameengine\include\resource\material.h(47): warning C4251: 'CMaterial::m_mapCBuffer': class 'std::unordered_map<size_t,PCBufferNode,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CMaterial'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=PCBufferNode
          ]
  d:\mingyu\newdx\gameengine\include\resource\material.h(47): note: 'std::unordered_map<size_t,PCBufferNode,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=PCBufferNode
          ]
d:\mingyu\newdx\gameengine\include\resource\blendstate.h(15): warning C4251: 'CBlendState::m_vecDesc': class 'std::vector<D3D11_RENDER_TARGET_BLEND_DESC,std::allocator<_Ty>>'에서는 class 'CBlendState'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=D3D11_RENDER_TARGET_BLEND_DESC
          ]
  d:\mingyu\newdx\gameengine\include\resource\blendstate.h(15): note: 'std::vector<D3D11_RENDER_TARGET_BLEND_DESC,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=D3D11_RENDER_TARGET_BLEND_DESC
          ]
d:\mingyu\newdx\gameengine\include\resource\animation2dsequence.h(41): warning C4251: 'CAnimation2DSequence::m_vecTexture': class 'std::vector<CTexture *,std::allocator<_Ty>>'에서는 class 'CAnimation2DSequence'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CTexture *
          ]
  d:\mingyu\newdx\gameengine\include\resource\animation2dsequence.h(41): note: 'std::vector<CTexture *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CTexture *
          ]
d:\mingyu\newdx\gameengine\include\resource\animation2dsequence.h(51): warning C4251: 'CAnimation2DSequence::m_NotifyList': class 'std::list<PAnim2DNotify,std::allocator<_Ty>>'에서는 class 'CAnimation2DSequence'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=PAnim2DNotify
          ]
  d:\mingyu\newdx\gameengine\include\resource\animation2dsequence.h(51): note: 'std::list<PAnim2DNotify,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=PAnim2DNotify
          ]
d:\mingyu\newdx\gameengine\include\resource\animation2dsequence.h(52): warning C4251: 'CAnimation2DSequence::m_vecFrameInfo': class 'std::vector<Animation2DFrameInfo,std::allocator<_Ty>>'에서는 class 'CAnimation2DSequence'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=Animation2DFrameInfo
          ]
  d:\mingyu\newdx\gameengine\include\resource\animation2dsequence.h(52): note: 'std::vector<Animation2DFrameInfo,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=Animation2DFrameInfo
          ]
d:\mingyu\newdx\gameengine\include\resource\animation2dsequence.h(55): warning C4251: 'CAnimation2DSequence::m_strReturnSequence': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CAnimation2DSequence'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
  Shader.cpp
d:\mingyu\newdx\gameengine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.17763.0\um\directxmath.h(432): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\ref.h(13): warning C4251: 'CRef::m_strName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CRef'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\pathmanager.h(10): warning C4251: 'CPathManager::m_mapPath': class 'std::unordered_map<size_t,TCHAR *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CPathManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=TCHAR *
          ]
  d:\mingyu\newdx\gameengine\include\pathmanager.h(10): note: 'std::unordered_map<size_t,TCHAR *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=TCHAR *
          ]
  ShaderManager.cpp
d:\mingyu\newdx\gameengine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.17763.0\um\directxmath.h(432): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(8): warning C4251: 'CShaderManager::m_mapShader': class 'std::unordered_map<size_t,CShader *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CShader *
          ]
  d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(8): note: 'std::unordered_map<size_t,CShader *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CShader *
          ]
d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(9): warning C4251: 'CShaderManager::m_mapInputLayout': class 'std::unordered_map<size_t,ID3D11InputLayout *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=ID3D11InputLayout *
          ]
  d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(9): note: 'std::unordered_map<size_t,ID3D11InputLayout *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=ID3D11InputLayout *
          ]
d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(10): warning C4251: 'CShaderManager::m_mapCBuffer': class 'std::unordered_map<size_t,PCBuffer,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=PCBuffer
          ]
  d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(10): note: 'std::unordered_map<size_t,PCBuffer,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=PCBuffer
          ]
d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(11): warning C4251: 'CShaderManager::m_vecInputDesc': class 'std::vector<D3D11_INPUT_ELEMENT_DESC,std::allocator<_Ty>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=D3D11_INPUT_ELEMENT_DESC
          ]
  d:\mingyu\newdx\gameengine\include\resource\shadermanager.h(11): note: 'std::vector<D3D11_INPUT_ELEMENT_DESC,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=D3D11_INPUT_ELEMENT_DESC
          ]
d:\mingyu\newdx\gameengine\include\ref.h(13): warning C4251: 'CRef::m_strName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CRef'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\resource\shadermanager.cpp(353): warning C4267: '인수': 'size_t'에서 'UINT'(으)로 변환하면서 데이터가 손실될 수 있습니다.
  StaticMesh.cpp
d:\mingyu\newdx\gameengine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.17763.0\um\directxmath.h(432): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\ref.h(13): warning C4251: 'CRef::m_strName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CRef'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\resource\mesh.h(22): warning C4251: 'CMesh::m_vecMeshContainer': class 'std::vector<PMeshContainer,std::allocator<_Ty>>'에서는 class 'CMesh'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=PMeshContainer
          ]
  d:\mingyu\newdx\gameengine\include\resource\mesh.h(22): note: 'std::vector<PMeshContainer,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=PMeshContainer
          ]
  Texture.cpp
d:\mingyu\newdx\gameengine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.17763.0\um\directxmath.h(432): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\ref.h(13): warning C4251: 'CRef::m_strName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CRef'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\resource\texture.h(14): warning C4251: 'CTexture::m_vecImage': class 'std::vector<DirectX::ScratchImage *,std::allocator<_Ty>>'에서는 class 'CTexture'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=DirectX::ScratchImage *
          ]
  d:\mingyu\newdx\gameengine\include\resource\texture.h(14): note: 'std::vector<DirectX::ScratchImage *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=DirectX::ScratchImage *
          ]
d:\mingyu\newdx\gameengine\include\resource\texture.h(15): warning C4251: 'CTexture::m_vecFileName': class 'std::vector<const TCHAR *,std::allocator<_Ty>>'에서는 class 'CTexture'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=const TCHAR *
          ]
  d:\mingyu\newdx\gameengine\include\resource\texture.h(15): note: 'std::vector<const TCHAR *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=const TCHAR *
          ]
d:\mingyu\newdx\gameengine\include\resource\texture.h(16): warning C4251: 'CTexture::m_strPathName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CTexture'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\pathmanager.h(10): warning C4251: 'CPathManager::m_mapPath': class 'std::unordered_map<size_t,TCHAR *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CPathManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=TCHAR *
          ]
  d:\mingyu\newdx\gameengine\include\pathmanager.h(10): note: 'std::unordered_map<size_t,TCHAR *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=TCHAR *
          ]
d:\mingyu\newdx\gameengine\include\resource\texture.cpp(114): warning C4267: '=': 'size_t'에서 'unsigned int'(으)로 변환하면서 데이터가 손실될 수 있습니다.
d:\mingyu\newdx\gameengine\include\resource\texture.cpp(115): warning C4267: '=': 'size_t'에서 'unsigned int'(으)로 변환하면서 데이터가 손실될 수 있습니다.
  GameMode.cpp
d:\mingyu\newdx\gameengine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.17763.0\um\directxmath.h(432): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\ref.h(13): warning C4251: 'CRef::m_strName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CRef'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\scene\scene.h(26): warning C4251: 'CScene::m_ObjList': class 'std::list<CGameObject *,std::allocator<_Ty>>'에서는 class 'CScene'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CGameObject *
          ]
  d:\mingyu\newdx\gameengine\include\scene\scene.h(26): note: 'std::list<CGameObject *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CGameObject *
          ]
d:\mingyu\newdx\gameengine\include\scene\scene.h(27): warning C4251: 'CScene::m_BeginList': class 'std::list<CGameObject *,std::allocator<_Ty>>'에서는 class 'CScene'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CGameObject *
          ]
  d:\mingyu\newdx\gameengine\include\scene\scene.h(26): note: 'std::list<CGameObject *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CGameObject *
          ]
d:\mingyu\newdx\gameengine\include\cameramanager.h(14): warning C4251: 'CCameraManager::m_CameraList': class 'std::list<CCameraComponent *,std::allocator<_Ty>>'에서는 class 'CCameraManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CCameraComponent *
          ]
  d:\mingyu\newdx\gameengine\include\cameramanager.h(14): note: 'std::list<CCameraComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CCameraComponent *
          ]
d:\mingyu\newdx\gameengine\include\component\scenecomponent.h(15): warning C4251: 'CSceneComponent::m_vecChild': class 'std::vector<CSceneComponent *,std::allocator<_Ty>>'에서는 class 'CSceneComponent'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CSceneComponent *
          ]
  d:\mingyu\newdx\gameengine\include\component\scenecomponent.h(15): note: 'std::vector<CSceneComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CSceneComponent *
          ]
d:\mingyu\newdx\gameengine\include\object\gameobject.h(19): warning C4251: 'CGameObject::m_vecObjComponent': class 'std::vector<CObjectComponent *,std::allocator<_Ty>>'에서는 class 'CGameObject'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CObjectComponent *
          ]
  d:\mingyu\newdx\gameengine\include\object\gameobject.h(19): note: 'std::vector<CObjectComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CObjectComponent *
          ]
d:\mingyu\newdx\gameengine\include\object\gameobject.h(20): warning C4251: 'CGameObject::m_vecChild': class 'std::vector<CGameObject *,std::allocator<_Ty>>'에서는 class 'CGameObject'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CGameObject *
          ]
  d:\mingyu\newdx\gameengine\include\object\gameobject.h(20): note: 'std::vector<CGameObject *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CGameObject *
          ]
d:\mingyu\newdx\gameengine\include\object\gameobject.h(22): warning C4251: 'CGameObject::m_BeginList': class 'std::list<CComponent *,std::allocator<_Ty>>'에서는 class 'CGameObject'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CComponent *
          ]
  d:\mingyu\newdx\gameengine\include\object\gameobject.h(22): note: 'std::list<CComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CComponent *
          ]
  Navigation.cpp
d:\mingyu\newdx\gameengine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.17763.0\um\directxmath.h(432): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
  Navigation2D.cpp
d:\mingyu\newdx\gameengine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.17763.0\um\directxmath.h(432): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\scene\navigation2d.h(16): warning C4251: 'CNavigation2D::m_PathList': class 'std::list<Vector3,std::allocator<_Ty>>'에서는 class 'CNavigation2D'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=Vector3
          ]
  d:\mingyu\newdx\gameengine\include\scene\navigation2d.h(16): note: 'std::list<Vector3,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=Vector3
          ]
d:\mingyu\newdx\gameengine\include\scene\navigation2d.h(17): warning C4251: 'CNavigation2D::m_vecOpen': class 'std::vector<CTile *,std::allocator<_Ty>>'에서는 class 'CNavigation2D'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CTile *
          ]
  d:\mingyu\newdx\gameengine\include\scene\navigation2d.h(17): note: 'std::vector<CTile *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CTile *
          ]
d:\mingyu\newdx\gameengine\include\scene\navigation2d.h(18): warning C4251: 'CNavigation2D::m_vecUse': class 'std::vector<CTile *,std::allocator<_Ty>>'에서는 class 'CNavigation2D'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CTile *
          ]
  d:\mingyu\newdx\gameengine\include\scene\navigation2d.h(17): note: 'std::vector<CTile *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CTile *
          ]
d:\mingyu\newdx\gameengine\include\ref.h(13): warning C4251: 'CRef::m_strName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CRef'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\component\scenecomponent.h(15): warning C4251: 'CSceneComponent::m_vecChild': class 'std::vector<CSceneComponent *,std::allocator<_Ty>>'에서는 class 'CSceneComponent'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CSceneComponent *
          ]
  d:\mingyu\newdx\gameengine\include\component\scenecomponent.h(15): note: 'std::vector<CSceneComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CSceneComponent *
          ]
d:\mingyu\newdx\gameengine\include\component\tilemap.h(32): warning C4251: 'CTileMap::m_vecFrame': class 'std::vector<ImageFrame,std::allocator<_Ty>>'에서는 class 'CTileMap'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=ImageFrame
          ]
  d:\mingyu\newdx\gameengine\include\component\tilemap.h(32): note: 'std::vector<ImageFrame,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=ImageFrame
          ]
  Navigation3D.cpp
d:\mingyu\newdx\gameengine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.17763.0\um\directxmath.h(432): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
  Scene.cpp
d:\mingyu\newdx\gameengine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.17763.0\um\directxmath.h(432): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\ref.h(13): warning C4251: 'CRef::m_strName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CRef'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\scene\scene.h(26): warning C4251: 'CScene::m_ObjList': class 'std::list<CGameObject *,std::allocator<_Ty>>'에서는 class 'CScene'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CGameObject *
          ]
  d:\mingyu\newdx\gameengine\include\scene\scene.h(26): note: 'std::list<CGameObject *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CGameObject *
          ]
d:\mingyu\newdx\gameengine\include\scene\scene.h(27): warning C4251: 'CScene::m_BeginList': class 'std::list<CGameObject *,std::allocator<_Ty>>'에서는 class 'CScene'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CGameObject *
          ]
  d:\mingyu\newdx\gameengine\include\scene\scene.h(26): note: 'std::list<CGameObject *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CGameObject *
          ]
d:\mingyu\newdx\gameengine\include\component\scenecomponent.h(15): warning C4251: 'CSceneComponent::m_vecChild': class 'std::vector<CSceneComponent *,std::allocator<_Ty>>'에서는 class 'CSceneComponent'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CSceneComponent *
          ]
  d:\mingyu\newdx\gameengine\include\component\scenecomponent.h(15): note: 'std::vector<CSceneComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CSceneComponent *
          ]
d:\mingyu\newdx\gameengine\include\object\gameobject.h(19): warning C4251: 'CGameObject::m_vecObjComponent': class 'std::vector<CObjectComponent *,std::allocator<_Ty>>'에서는 class 'CGameObject'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CObjectComponent *
          ]
  d:\mingyu\newdx\gameengine\include\object\gameobject.h(19): note: 'std::vector<CObjectComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CObjectComponent *
          ]
d:\mingyu\newdx\gameengine\include\object\gameobject.h(20): warning C4251: 'CGameObject::m_vecChild': class 'std::vector<CGameObject *,std::allocator<_Ty>>'에서는 class 'CGameObject'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CGameObject *
          ]
  d:\mingyu\newdx\gameengine\include\object\gameobject.h(20): note: 'std::vector<CGameObject *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CGameObject *
          ]
d:\mingyu\newdx\gameengine\include\object\gameobject.h(22): warning C4251: 'CGameObject::m_BeginList': class 'std::list<CComponent *,std::allocator<_Ty>>'에서는 class 'CGameObject'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CComponent *
          ]
  d:\mingyu\newdx\gameengine\include\object\gameobject.h(22): note: 'std::list<CComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CComponent *
          ]
d:\mingyu\newdx\gameengine\include\cameramanager.h(14): warning C4251: 'CCameraManager::m_CameraList': class 'std::list<CCameraComponent *,std::allocator<_Ty>>'에서는 class 'CCameraManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CCameraComponent *
          ]
  d:\mingyu\newdx\gameengine\include\cameramanager.h(14): note: 'std::list<CCameraComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CCameraComponent *
          ]
d:\mingyu\newdx\gameengine\include\scene\navigation2d.h(16): warning C4251: 'CNavigation2D::m_PathList': class 'std::list<Vector3,std::allocator<_Ty>>'에서는 class 'CNavigation2D'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=Vector3
          ]
  d:\mingyu\newdx\gameengine\include\scene\navigation2d.h(16): note: 'std::list<Vector3,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=Vector3
          ]
d:\mingyu\newdx\gameengine\include\scene\navigation2d.h(17): warning C4251: 'CNavigation2D::m_vecOpen': class 'std::vector<CTile *,std::allocator<_Ty>>'에서는 class 'CNavigation2D'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CTile *
          ]
  d:\mingyu\newdx\gameengine\include\scene\navigation2d.h(17): note: 'std::vector<CTile *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CTile *
          ]
d:\mingyu\newdx\gameengine\include\scene\navigation2d.h(18): warning C4251: 'CNavigation2D::m_vecUse': class 'std::vector<CTile *,std::allocator<_Ty>>'에서는 class 'CNavigation2D'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CTile *
          ]
  d:\mingyu\newdx\gameengine\include\scene\navigation2d.h(17): note: 'std::vector<CTile *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CTile *
          ]
  SceneManager.cpp
d:\mingyu\newdx\gameengine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.17763.0\um\directxmath.h(432): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\ref.h(13): warning C4251: 'CRef::m_strName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CRef'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\scene\scene.h(26): warning C4251: 'CScene::m_ObjList': class 'std::list<CGameObject *,std::allocator<_Ty>>'에서는 class 'CScene'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CGameObject *
          ]
  d:\mingyu\newdx\gameengine\include\scene\scene.h(26): note: 'std::list<CGameObject *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CGameObject *
          ]
d:\mingyu\newdx\gameengine\include\scene\scene.h(27): warning C4251: 'CScene::m_BeginList': class 'std::list<CGameObject *,std::allocator<_Ty>>'에서는 class 'CScene'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CGameObject *
          ]
  d:\mingyu\newdx\gameengine\include\scene\scene.h(26): note: 'std::list<CGameObject *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CGameObject *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(8): warning C4251: 'CResourceManager::m_mapMesh': class 'std::unordered_map<size_t,CMesh *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CMesh *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(8): note: 'std::unordered_map<size_t,CMesh *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CMesh *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(9): warning C4251: 'CResourceManager::m_mapTexture': class 'std::unordered_map<size_t,CTexture *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CTexture *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(9): note: 'std::unordered_map<size_t,CTexture *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CTexture *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(10): warning C4251: 'CResourceManager::m_mapMaterial': class 'std::unordered_map<size_t,CMaterial *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CMaterial *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(10): note: 'std::unordered_map<size_t,CMaterial *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CMaterial *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(11): warning C4251: 'CResourceManager::m_mapSampler': class 'std::unordered_map<size_t,ID3D11SamplerState *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=ID3D11SamplerState *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(11): note: 'std::unordered_map<size_t,ID3D11SamplerState *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=ID3D11SamplerState *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(12): warning C4251: 'CResourceManager::m_mapRenderState': class 'std::unordered_map<size_t,CRenderState *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CRenderState *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(12): note: 'std::unordered_map<size_t,CRenderState *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CRenderState *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(13): warning C4251: 'CResourceManager::m_mapAnim2DSequence': class 'std::unordered_map<size_t,CAnimation2DSequence *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CAnimation2DSequence *
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(13): note: 'std::unordered_map<size_t,CAnimation2DSequence *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CAnimation2DSequence *
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): warning C4251: 'CResourceManager::m_DefaultMeshList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(15): warning C4251: 'CResourceManager::m_DefaultTextureList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(16): warning C4251: 'CResourceManager::m_DefaultRenderStateList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(17): warning C4251: 'CResourceManager::m_DefaultMaterialList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
d:\mingyu\newdx\gameengine\include\resource\resourcemanager.h(18): warning C4251: 'CResourceManager::m_MaterialIter': class 'std::_List_iterator<std::_List_val<std::_List_simple_types<_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::pair<const size_t,CMaterial *>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\list(457): note: 'std::_List_iterator<std::_List_val<std::_List_simple_types<_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::pair<const size_t,CMaterial *>
          ]
d:\mingyu\newdx\gameengine\include\collisionmanager.h(18): warning C4251: 'CCollisionManager::m_ChannelList': class 'std::list<PCollisionChannel,std::allocator<_Ty>>'에서는 class 'CCollisionManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=PCollisionChannel
          ]
  d:\mingyu\newdx\gameengine\include\collisionmanager.h(18): note: 'std::list<PCollisionChannel,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=PCollisionChannel
          ]
d:\mingyu\newdx\gameengine\include\collisionmanager.h(19): warning C4251: 'CCollisionManager::m_mapProfile': class 'std::unordered_map<size_t,PCollisionProfile,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CCollisionManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=PCollisionProfile
          ]
  d:\mingyu\newdx\gameengine\include\collisionmanager.h(19): note: 'std::unordered_map<size_t,PCollisionProfile,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=PCollisionProfile
          ]
d:\mingyu\newdx\gameengine\include\collisionmanager.h(20): warning C4251: 'CCollisionManager::m_ColliderList': class 'std::list<CColliderBase *,std::allocator<_Ty>>'에서는 class 'CCollisionManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CColliderBase *
          ]
  d:\mingyu\newdx\gameengine\include\collisionmanager.h(20): note: 'std::list<CColliderBase *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CColliderBase *
          ]
  Scheduler.cpp
d:\mingyu\newdx\gameengine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.17763.0\um\directxmath.h(432): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\scheduler.h(7): warning C4251: '_tagScheduleInfo::strName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 struct '_tagScheduleInfo'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\scheduler.h(11): warning C4251: '_tagScheduleInfo::func': class 'std::function<void (void)>'에서는 struct '_tagScheduleInfo'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  d:\mingyu\newdx\gameengine\include\scheduler.h(11): note: 'std::function<void (void)>' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\scheduler.h(24): warning C4251: 'CScheduler::m_ScheduleList': class 'std::list<_tagScheduleInfo *,std::allocator<_Ty>>'에서는 class 'CScheduler'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=_tagScheduleInfo *
          ]
  d:\mingyu\newdx\gameengine\include\scheduler.h(24): note: 'std::list<_tagScheduleInfo *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=_tagScheduleInfo *
          ]
  Section.cpp
d:\mingyu\newdx\gameengine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.17763.0\um\directxmath.h(432): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\section.h(18): warning C4251: 'CSection::m_vecCollider': class 'std::vector<CColliderBase *,std::allocator<_Ty>>'에서는 class 'CSection'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CColliderBase *
          ]
  d:\mingyu\newdx\gameengine\include\section.h(18): note: 'std::vector<CColliderBase *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CColliderBase *
          ]
d:\mingyu\newdx\gameengine\include\ref.h(13): warning C4251: 'CRef::m_strName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CRef'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\component\scenecomponent.h(15): warning C4251: 'CSceneComponent::m_vecChild': class 'std::vector<CSceneComponent *,std::allocator<_Ty>>'에서는 class 'CSceneComponent'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CSceneComponent *
          ]
  d:\mingyu\newdx\gameengine\include\component\scenecomponent.h(15): note: 'std::vector<CSceneComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CSceneComponent *
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(23): warning C4251: 'CColliderBase::m_vecBlockCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(24): warning C4251: 'CColliderBase::m_vecBeginOverlapCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(25): warning C4251: 'CColliderBase::m_vecEndOverlapCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(28): warning C4251: 'CColliderBase::m_CurrentFrameCollision': class 'std::list<CColliderBase *,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CColliderBase *
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(28): note: 'std::list<CColliderBase *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CColliderBase *
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(29): warning C4251: 'CColliderBase::m_CollisionList': class 'std::list<CColliderBase *,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CColliderBase *
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(28): note: 'std::list<CColliderBase *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CColliderBase *
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(30): warning C4251: 'CColliderBase::m_vecSectionIndex': class 'std::vector<unsigned int,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=unsigned int
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(30): note: 'std::vector<unsigned int,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=unsigned int
          ]
d:\mingyu\newdx\gameengine\include\collisionmanager.h(18): warning C4251: 'CCollisionManager::m_ChannelList': class 'std::list<PCollisionChannel,std::allocator<_Ty>>'에서는 class 'CCollisionManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=PCollisionChannel
          ]
  d:\mingyu\newdx\gameengine\include\collisionmanager.h(18): note: 'std::list<PCollisionChannel,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=PCollisionChannel
          ]
d:\mingyu\newdx\gameengine\include\collisionmanager.h(19): warning C4251: 'CCollisionManager::m_mapProfile': class 'std::unordered_map<size_t,PCollisionProfile,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CCollisionManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=PCollisionProfile
          ]
  d:\mingyu\newdx\gameengine\include\collisionmanager.h(19): note: 'std::unordered_map<size_t,PCollisionProfile,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=PCollisionProfile
          ]
d:\mingyu\newdx\gameengine\include\collisionmanager.h(20): warning C4251: 'CCollisionManager::m_ColliderList': class 'std::list<CColliderBase *,std::allocator<_Ty>>'에서는 class 'CCollisionManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CColliderBase *
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(28): note: 'std::list<CColliderBase *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CColliderBase *
          ]
  SectionManager.cpp
d:\mingyu\newdx\gameengine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.17763.0\um\directxmath.h(432): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\section.h(18): warning C4251: 'CSection::m_vecCollider': class 'std::vector<CColliderBase *,std::allocator<_Ty>>'에서는 class 'CSection'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CColliderBase *
          ]
  d:\mingyu\newdx\gameengine\include\section.h(18): note: 'std::vector<CColliderBase *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CColliderBase *
          ]
d:\mingyu\newdx\gameengine\include\ref.h(13): warning C4251: 'CRef::m_strName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CRef'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\component\scenecomponent.h(15): warning C4251: 'CSceneComponent::m_vecChild': class 'std::vector<CSceneComponent *,std::allocator<_Ty>>'에서는 class 'CSceneComponent'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CSceneComponent *
          ]
  d:\mingyu\newdx\gameengine\include\component\scenecomponent.h(15): note: 'std::vector<CSceneComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CSceneComponent *
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(23): warning C4251: 'CColliderBase::m_vecBlockCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(24): warning C4251: 'CColliderBase::m_vecBeginOverlapCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(25): warning C4251: 'CColliderBase::m_vecEndOverlapCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(28): warning C4251: 'CColliderBase::m_CurrentFrameCollision': class 'std::list<CColliderBase *,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CColliderBase *
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(28): note: 'std::list<CColliderBase *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CColliderBase *
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(29): warning C4251: 'CColliderBase::m_CollisionList': class 'std::list<CColliderBase *,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CColliderBase *
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(28): note: 'std::list<CColliderBase *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CColliderBase *
          ]
d:\mingyu\newdx\gameengine\include\component\colliderbase.h(30): warning C4251: 'CColliderBase::m_vecSectionIndex': class 'std::vector<unsigned int,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=unsigned int
          ]
  d:\mingyu\newdx\gameengine\include\component\colliderbase.h(30): note: 'std::vector<unsigned int,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=unsigned int
          ]
d:\mingyu\newdx\gameengine\include\sectionmanager.cpp(17): warning C4018: '<': signed 또는 unsigned가 일치하지 않습니다.
d:\mingyu\newdx\gameengine\include\sectionmanager.cpp(57): warning C4244: '인수': 'unsigned int'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
d:\mingyu\newdx\gameengine\include\sectionmanager.cpp(63): warning C4018: '<': signed 또는 unsigned가 일치하지 않습니다.
d:\mingyu\newdx\gameengine\include\sectionmanager.cpp(65): warning C4018: '<': signed 또는 unsigned가 일치하지 않습니다.
d:\mingyu\newdx\gameengine\include\sectionmanager.cpp(67): warning C4018: '<': signed 또는 unsigned가 일치하지 않습니다.
d:\mingyu\newdx\gameengine\include\sectionmanager.cpp(73): warning C4244: '인수': 'int'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
d:\mingyu\newdx\gameengine\include\sectionmanager.cpp(74): warning C4244: '인수': 'int'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
d:\mingyu\newdx\gameengine\include\sectionmanager.cpp(96): warning C4018: '>=': signed 또는 unsigned가 일치하지 않습니다.
d:\mingyu\newdx\gameengine\include\sectionmanager.cpp(97): warning C4018: '>=': signed 또는 unsigned가 일치하지 않습니다.
d:\mingyu\newdx\gameengine\include\sectionmanager.cpp(98): warning C4018: '>=': signed 또는 unsigned가 일치하지 않습니다.
d:\mingyu\newdx\gameengine\include\sectionmanager.cpp(105): warning C4018: '>=': signed 또는 unsigned가 일치하지 않습니다.
d:\mingyu\newdx\gameengine\include\sectionmanager.cpp(106): warning C4018: '>=': signed 또는 unsigned가 일치하지 않습니다.
d:\mingyu\newdx\gameengine\include\sectionmanager.cpp(107): warning C4018: '>=': signed 또는 unsigned가 일치하지 않습니다.
d:\mingyu\newdx\gameengine\include\sectionmanager.cpp(126): warning C4018: '<': signed 또는 unsigned가 일치하지 않습니다.
d:\mingyu\newdx\gameengine\include\sectionmanager.cpp(134): warning C4018: '<': signed 또는 unsigned가 일치하지 않습니다.
d:\mingyu\newdx\gameengine\include\sectionmanager.cpp(148): warning C4018: '>=': signed 또는 unsigned가 일치하지 않습니다.
  Timer.cpp
d:\mingyu\newdx\gameengine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.17763.0\um\directxmath.h(432): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
  TimerManager.cpp
d:\mingyu\newdx\gameengine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.17763.0\um\directxmath.h(432): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\timermanager.h(8): warning C4251: 'CTimerManager::m_mapTimer': class 'std::unordered_map<size_t,CTimer *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CTimerManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=size_t,
              _Ty=CTimer *
          ]
  d:\mingyu\newdx\gameengine\include\timermanager.h(8): note: 'std::unordered_map<size_t,CTimer *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=size_t,
              _Ty=CTimer *
          ]
d:\mingyu\newdx\gameengine\include\scheduler.h(7): warning C4251: '_tagScheduleInfo::strName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 struct '_tagScheduleInfo'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\scheduler.h(11): warning C4251: '_tagScheduleInfo::func': class 'std::function<void (void)>'에서는 struct '_tagScheduleInfo'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  d:\mingyu\newdx\gameengine\include\scheduler.h(11): note: 'std::function<void (void)>' 선언을 참조하십시오.
d:\mingyu\newdx\gameengine\include\scheduler.h(24): warning C4251: 'CScheduler::m_ScheduleList': class 'std::list<_tagScheduleInfo *,std::allocator<_Ty>>'에서는 class 'CScheduler'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=_tagScheduleInfo *
          ]
  d:\mingyu\newdx\gameengine\include\scheduler.h(24): note: 'std::list<_tagScheduleInfo *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=_tagScheduleInfo *
          ]
d:\mingyu\newdx\gameengine\include\timermanager.cpp(38): warning C4244: '초기화 중': 'float'에서 'int'(으)로 변환하면서 데이터가 손실될 수 있습니다.
  코드를 생성하고 있습니다...
  컴파일하고 있습니다...
  Vector2.cpp
  Vector3.cpp
d:\mingyu\newdx\gameengine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.17763.0\um\directxmath.h(432): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
  Vector4.cpp
  코드를 생성하고 있습니다...
d:\mingyu\newdx\gameengine\include\vector3.cpp(114): warning C4715: '_tagVector3::operator[]': 모든 제어 경로에서 값을 반환하지는 않습니다.
d:\mingyu\newdx\gameengine\include\vector2.cpp(98): warning C4715: '_tagVector2::operator[]': 모든 제어 경로에서 값을 반환하지는 않습니다.
     ../Bin/GameEngine_Debug.lib 라이브러리 및 ../Bin/GameEngine_Debug.exp 개체를 생성하고 있습니다.
DirectXTex_Debug.lib(BC.obj) : warning LNK4099: 'DirectXTex.pdb' PDB를 'DirectXTex_Debug.lib(BC.obj)' 또는 'D:\MINGYU\NEWDX\GameEngine\Bin\DirectXTex.pdb'에서 찾을 수 없습니다. 디버그 정보가 없는 것처럼 개체를 링크합니다.
DirectXTex_Debug.lib(BC4BC5.obj) : warning LNK4099: 'DirectXTex.pdb' PDB를 'DirectXTex_Debug.lib(BC4BC5.obj)' 또는 'D:\MINGYU\NEWDX\GameEngine\Bin\DirectXTex.pdb'에서 찾을 수 없습니다. 디버그 정보가 없는 것처럼 개체를 링크합니다.
DirectXTex_Debug.lib(BC6HBC7.obj) : warning LNK4099: 'DirectXTex.pdb' PDB를 'DirectXTex_Debug.lib(BC6HBC7.obj)' 또는 'D:\MINGYU\NEWDX\GameEngine\Bin\DirectXTex.pdb'에서 찾을 수 없습니다. 디버그 정보가 없는 것처럼 개체를 링크합니다.
DirectXTex_Debug.lib(DirectXTexCompress.obj) : warning LNK4099: 'DirectXTex.pdb' PDB를 'DirectXTex_Debug.lib(DirectXTexCompress.obj)' 또는 'D:\MINGYU\NEWDX\GameEngine\Bin\DirectXTex.pdb'에서 찾을 수 없습니다. 디버그 정보가 없는 것처럼 개체를 링크합니다.
DirectXTex_Debug.lib(DirectXTexConvert.obj) : warning LNK4099: 'DirectXTex.pdb' PDB를 'DirectXTex_Debug.lib(DirectXTexConvert.obj)' 또는 'D:\MINGYU\NEWDX\GameEngine\Bin\DirectXTex.pdb'에서 찾을 수 없습니다. 디버그 정보가 없는 것처럼 개체를 링크합니다.
DirectXTex_Debug.lib(DirectXTexD3D11.obj) : warning LNK4099: 'DirectXTex.pdb' PDB를 'DirectXTex_Debug.lib(DirectXTexD3D11.obj)' 또는 'D:\MINGYU\NEWDX\GameEngine\Bin\DirectXTex.pdb'에서 찾을 수 없습니다. 디버그 정보가 없는 것처럼 개체를 링크합니다.
DirectXTex_Debug.lib(DirectXTexDDS.obj) : warning LNK4099: 'DirectXTex.pdb' PDB를 'DirectXTex_Debug.lib(DirectXTexDDS.obj)' 또는 'D:\MINGYU\NEWDX\GameEngine\Bin\DirectXTex.pdb'에서 찾을 수 없습니다. 디버그 정보가 없는 것처럼 개체를 링크합니다.
DirectXTex_Debug.lib(DirectXTexImage.obj) : warning LNK4099: 'DirectXTex.pdb' PDB를 'DirectXTex_Debug.lib(DirectXTexImage.obj)' 또는 'D:\MINGYU\NEWDX\GameEngine\Bin\DirectXTex.pdb'에서 찾을 수 없습니다. 디버그 정보가 없는 것처럼 개체를 링크합니다.
DirectXTex_Debug.lib(DirectXTexMipMaps.obj) : warning LNK4099: 'DirectXTex.pdb' PDB를 'DirectXTex_Debug.lib(DirectXTexMipMaps.obj)' 또는 'D:\MINGYU\NEWDX\GameEngine\Bin\DirectXTex.pdb'에서 찾을 수 없습니다. 디버그 정보가 없는 것처럼 개체를 링크합니다.
DirectXTex_Debug.lib(DirectXTexTGA.obj) : warning LNK4099: 'DirectXTex.pdb' PDB를 'DirectXTex_Debug.lib(DirectXTexTGA.obj)' 또는 'D:\MINGYU\NEWDX\GameEngine\Bin\DirectXTex.pdb'에서 찾을 수 없습니다. 디버그 정보가 없는 것처럼 개체를 링크합니다.
DirectXTex_Debug.lib(DirectXTexUtil.obj) : warning LNK4099: 'DirectXTex.pdb' PDB를 'DirectXTex_Debug.lib(DirectXTexUtil.obj)' 또는 'D:\MINGYU\NEWDX\GameEngine\Bin\DirectXTex.pdb'에서 찾을 수 없습니다. 디버그 정보가 없는 것처럼 개체를 링크합니다.
DirectXTex_Debug.lib(DirectXTexWIC.obj) : warning LNK4099: 'DirectXTex.pdb' PDB를 'DirectXTex_Debug.lib(DirectXTexWIC.obj)' 또는 'D:\MINGYU\NEWDX\GameEngine\Bin\DirectXTex.pdb'에서 찾을 수 없습니다. 디버그 정보가 없는 것처럼 개체를 링크합니다.
  GameEngine.vcxproj -> D:\MINGYU\NEWDX\GameEngine\Include\../Bin/GameEngine_Debug.dll
  0개 파일이 복사되었습니다.
  파일을 찾을 수 없습니다-*.inl
  0개 파일이 복사되었습니다.
  .\GameEngine\Bin\GameEngine_Debug.lib
  1개 파일이 복사되었습니다.
  .\GameEngine\Bin\GameEngine_Debug.dll
  1개 파일이 복사되었습니다.
  .\GameEngine\Bin\GameEngine_Debug.lib
  1개 파일이 복사되었습니다.
  .\GameEngine\Bin\GameEngine_Debug.dll
  1개 파일이 복사되었습니다.
  .\GameEngine\Bin\GameEngine_Debug.lib
  1개 파일이 복사되었습니다.
  .\GameEngine\Bin\GameEngine_Debug.dll
  1개 파일이 복사되었습니다.
  0개 파일이 복사되었습니다.
  0개 파일이 복사되었습니다.
  0개 파일이 복사되었습니다.
